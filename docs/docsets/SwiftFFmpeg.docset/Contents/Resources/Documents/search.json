{"Typealiases.html#/s:11SwiftFFmpeg15AVClassCategorya":{"name":"AVClassCategory","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg9AVCodecIDa":{"name":"AVCodecID","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg18AVGetFormatHandlera":{"name":"AVGetFormatHandler","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg19AVCodecParserResulta":{"name":"AVCodecParserResult","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg12AVDeviceRecta":{"name":"AVDeviceRect","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg21AVAppToDevMessageTypea":{"name":"AVAppToDevMessageType","abstract":"<p>Message types used by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC19sendMessageToDevice4type4dataySo05AVAppg3DevF4TypeV_SwSgtKF\">AVFormatContext.sendMessageToDevice(type:data:)</a></code>.</p>"},"Typealiases.html#/s:11SwiftFFmpeg21AVDevToAppMessageTypea":{"name":"AVDevToAppMessageType","abstract":"<p>Message types used by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC24sendMessageToApplication4type4dataySo05AVDevg3AppF4TypeV_SwSgtKF\">AVFormatContext.sendMessageToApplication(type:data:)</a></code>.</p>"},"Typealiases.html#/s:11SwiftFFmpeg14AVHWDeviceTypea":{"name":"AVHWDeviceType","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg26AVHWFrameTransferDirectiona":{"name":"AVHWFrameTransferDirection","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg16AVIODirEntryTypea":{"name":"AVIODirEntryType","abstract":"<p>Directory entry types.</p>"},"Typealiases.html#/s:11SwiftFFmpeg21AVIOInterruptCallbacka":{"name":"AVIOInterruptCallback","abstract":"<p>Callback for checking whether to abort blocking functions."},"Typealiases.html#/s:11SwiftFFmpeg15AVIOReadHandlera":{"name":"AVIOReadHandler","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg16AVIOWriteHandlera":{"name":"AVIOWriteHandler","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg15AVIOSeekHandlera":{"name":"AVIOSeekHandler","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg12AVOptionTypea":{"name":"AVOptionType","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg9AVDiscarda":{"name":"AVDiscard","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg14AVSampleFormata":{"name":"AVSampleFormat","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg11AVMediaTypea":{"name":"AVMediaType","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg10AVRationala":{"name":"AVRational","abstract":"<p>Rational number (pair of numerator and denominator).</p>"},"Typealiases.html#/s:11SwiftFFmpeg10AVRoundinga":{"name":"AVRounding","abstract":"<p>Rounding methods.</p>"},"Typealiases.html#/s:11SwiftFFmpeg13AVPictureTypea":{"name":"AVPictureType","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:11SwiftFFmpeg13AVPixelFormata":{"name":"AVPixelFormat","abstract":"<p>Undocumented</p>"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV4noneACvpZ":{"name":"none","abstract":"<p>Undocumented</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV10CHL_NATIVEACvpZ":{"name":"CHL_NATIVE","abstract":"<p>Channel mask value used for <code>AVCodecContext.request_channel_layout</code> to indicate that","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV8CHL_MONOACvpZ":{"name":"CHL_MONO","abstract":"<p>FC</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV10CHL_STEREOACvpZ":{"name":"CHL_STEREO","abstract":"<p>FL+FR</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV11CHL_2POINT1ACvpZ":{"name":"CHL_2POINT1","abstract":"<p>FL+FR+LFE</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV7CHL_2_1ACvpZ":{"name":"CHL_2_1","abstract":"<p>FL+FR+BC</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV12CHL_SURROUNDACvpZ":{"name":"CHL_SURROUND","abstract":"<p>FL+FR+FC</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV11CHL_3POINT1ACvpZ":{"name":"CHL_3POINT1","abstract":"<p>FL+FR+FC+LFE</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV11CHL_4POINT0ACvpZ":{"name":"CHL_4POINT0","abstract":"<p>FL+FR+FC+BC</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV11CHL_4POINT1ACvpZ":{"name":"CHL_4POINT1","abstract":"<p>FL+FR+FC+BC+LFE</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV7CHL_2_2ACvpZ":{"name":"CHL_2_2","abstract":"<p>FL+FR+SL+SR</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV8CHL_QUADACvpZ":{"name":"CHL_QUAD","abstract":"<p>FL+FR+BL+BR</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV11CHL_5POINT0ACvpZ":{"name":"CHL_5POINT0","abstract":"<p>FL+FR+FC+SL+SR</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV11CHL_5POINT1ACvpZ":{"name":"CHL_5POINT1","abstract":"<p>FL+FR+FC+SL+SR+LFE</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV16CHL_5POINT0_BACKACvpZ":{"name":"CHL_5POINT0_BACK","abstract":"<p>FL+FR+FC+BL+BR</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV16CHL_5POINT1_BACKACvpZ":{"name":"CHL_5POINT1_BACK","abstract":"<p>FL+FR+FC+BL+BR+LFE</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV11CHL_6POINT0ACvpZ":{"name":"CHL_6POINT0","abstract":"<p>FL+FR+SL+SR+FLC+FRC</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV17CHL_6POINT0_FRONTACvpZ":{"name":"CHL_6POINT0_FRONT","abstract":"<p>FL+FR+FLC+FRC+SL+SR</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV13CHL_HEXAGONALACvpZ":{"name":"CHL_HEXAGONAL","abstract":"<p>FL+FR+FC+BL+BR+BC</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV11CHL_6POINT1ACvpZ":{"name":"CHL_6POINT1","abstract":"<p>FL+FR+FC+SL+SR+LFE+BC</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV16CHL_6POINT1_BACKACvpZ":{"name":"CHL_6POINT1_BACK","abstract":"<p>FL+FR+FC+BL+BR+LFE+BC</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV17CHL_6POINT1_FRONTACvpZ":{"name":"CHL_6POINT1_FRONT","abstract":"<p>FL+FR+FLC+FRC+SL+SR+LFE</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV11CHL_7POINT0ACvpZ":{"name":"CHL_7POINT0","abstract":"<p>FL+FR+FC+SL+SR+BL+BR</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV17CHL_7POINT0_FRONTACvpZ":{"name":"CHL_7POINT0_FRONT","abstract":"<p>FL+FR+FC+SL+SR+FLC+FRC</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV11CHL_7POINT1ACvpZ":{"name":"CHL_7POINT1","abstract":"<p>FL+FR+FC+SL+SR+LFE+BL+BR</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV16CHL_7POINT1_WIDEACvpZ":{"name":"CHL_7POINT1_WIDE","abstract":"<p>FL+FR+FC+SL+SR+LFE+FLC+FRC</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV21CHL_7POINT1_WIDE_BACKACvpZ":{"name":"CHL_7POINT1_WIDE_BACK","abstract":"<p>FL+FR+FC+BL+BR+LFE+FLC+FRC</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV13CHL_OCTAGONALACvpZ":{"name":"CHL_OCTAGONAL","abstract":"<p>FL+FR+FC+SL+SR+BL+BC+BR</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV17CHL_HEXADECAGONALACvpZ":{"name":"CHL_HEXADECAGONAL","abstract":"<p>FL+FR+FC+SL+SR+BL+BC+BR+WL+WR+TBL+TBR+TBC+TFC+TFL+TFR</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV18CHL_STEREO_DOWNMIXACvpZ":{"name":"CHL_STEREO_DOWNMIX","abstract":"<p>DL+DR</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV8rawValues6UInt64Vvp":{"name":"rawValue","abstract":"<p>Undocumented</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV8rawValueACs6UInt64V_tcfc":{"name":"init(rawValue:)","abstract":"<p>Undocumented</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV4nameACSgSS_tcfc":{"name":"init(name:)","abstract":"<p>Return a channel layout id that matches name, or <code>nil</code> if no match is found.</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV12channelCountSivp":{"name":"channelCount","abstract":"<p>The number of channels in the channel layout.</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV5index3forSiSgAA0C0V_tF":{"name":"index(for:)","abstract":"<p>Get the index of a channel in channel layout.</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:11SwiftFFmpeg15AVChannelLayoutV7default3forACSi_tFZ":{"name":"default(for:)","abstract":"<p>Get the default channel layout for a given number of channels.</p>","parent_name":"AVChannelLayout"},"Structs/AVChannelLayout.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVChannelLayout"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV9frontLeftACvpZ":{"name":"frontLeft","abstract":"<p>FL</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV10frontRightACvpZ":{"name":"frontRight","abstract":"<p>FR</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV11frontCenterACvpZ":{"name":"frontCenter","abstract":"<p>FC</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV12lowFrequencyACvpZ":{"name":"lowFrequency","abstract":"<p>LFE</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV8backLeftACvpZ":{"name":"backLeft","abstract":"<p>BL</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV9backRightACvpZ":{"name":"backRight","abstract":"<p>BR</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV17frontLeftOfCenterACvpZ":{"name":"frontLeftOfCenter","abstract":"<p>FLC</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV18frontRightOfCenterACvpZ":{"name":"frontRightOfCenter","abstract":"<p>FRC</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV10backCenterACvpZ":{"name":"backCenter","abstract":"<p>BC</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV8sideLeftACvpZ":{"name":"sideLeft","abstract":"<p>SL</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV9sideRightACvpZ":{"name":"sideRight","abstract":"<p>SR</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV9topCenterACvpZ":{"name":"topCenter","abstract":"<p>TC</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV12topFrontLeftACvpZ":{"name":"topFrontLeft","abstract":"<p>TFL</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV14topFrontCenterACvpZ":{"name":"topFrontCenter","abstract":"<p>TFC</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV13topFrontRightACvpZ":{"name":"topFrontRight","abstract":"<p>TFR</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV11topBackLeftACvpZ":{"name":"topBackLeft","abstract":"<p>TBL</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV13topBackCenterACvpZ":{"name":"topBackCenter","abstract":"<p>TBC</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV12topBackRightACvpZ":{"name":"topBackRight","abstract":"<p>TBR</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV10stereoLeftACvpZ":{"name":"stereoLeft","abstract":"<p>DL</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV11stereoRightACvpZ":{"name":"stereoRight","abstract":"<p>DR</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV8wideLeftACvpZ":{"name":"wideLeft","abstract":"<p>WL</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV9wideRightACvpZ":{"name":"wideRight","abstract":"<p>WR</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV18surroundDirectLeftACvpZ":{"name":"surroundDirectLeft","abstract":"<p>SDL</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV19surroundDirectRightACvpZ":{"name":"surroundDirectRight","abstract":"<p>SDR</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV13lowFrequency2ACvpZ":{"name":"lowFrequency2","abstract":"<p>LFE2</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV8rawValues6UInt64Vvp":{"name":"rawValue","abstract":"<p>Undocumented</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV8rawValueACs6UInt64V_tcfc":{"name":"init(rawValue:)","abstract":"<p>Undocumented</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:11SwiftFFmpeg9AVChannelV4nameSSvp":{"name":"name","abstract":"<p>The name of the audio channel.</p>","parent_name":"AVChannel"},"Structs/AVChannel.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVChannel"},"Structs/AVOption/Flag.html#/s:11SwiftFFmpeg8AVOptionV4FlagV8encodingAEvpZ":{"name":"encoding","abstract":"<p>A generic parameter which can be set by the user for muxing or encoding.</p>","parent_name":"Flag"},"Structs/AVOption/Flag.html#/s:11SwiftFFmpeg8AVOptionV4FlagV8decodingAEvpZ":{"name":"decoding","abstract":"<p>A generic parameter which can be set by the user for demuxing or decoding.</p>","parent_name":"Flag"},"Structs/AVOption/Flag.html#/s:11SwiftFFmpeg8AVOptionV4FlagV5audioAEvpZ":{"name":"audio","abstract":"<p>Undocumented</p>","parent_name":"Flag"},"Structs/AVOption/Flag.html#/s:11SwiftFFmpeg8AVOptionV4FlagV5videoAEvpZ":{"name":"video","abstract":"<p>Undocumented</p>","parent_name":"Flag"},"Structs/AVOption/Flag.html#/s:11SwiftFFmpeg8AVOptionV4FlagV8subtitleAEvpZ":{"name":"subtitle","abstract":"<p>Undocumented</p>","parent_name":"Flag"},"Structs/AVOption/Flag.html#/s:11SwiftFFmpeg8AVOptionV4FlagV6exportAEvpZ":{"name":"export","abstract":"<p>The option is intended for exporting values to the caller.</p>","parent_name":"Flag"},"Structs/AVOption/Flag.html#/s:11SwiftFFmpeg8AVOptionV4FlagV8readonlyAEvpZ":{"name":"readonly","abstract":"<p>The option may not be set through the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVOption.html\">AVOption</a></code> API, only read.","parent_name":"Flag"},"Structs/AVOption/Flag.html#/s:11SwiftFFmpeg8AVOptionV4FlagV3bsfAEvpZ":{"name":"bsf","abstract":"<p>A generic parameter which can be set by the user for bit stream filtering.</p>","parent_name":"Flag"},"Structs/AVOption/Flag.html#/s:11SwiftFFmpeg8AVOptionV4FlagV9filteringAEvpZ":{"name":"filtering","abstract":"<p>A generic parameter which can be set by the user for filtering.</p>","parent_name":"Flag"},"Structs/AVOption/Flag.html#/s:11SwiftFFmpeg8AVOptionV4FlagV10deprecatedAEvpZ":{"name":"deprecated","abstract":"<p>Set if option is deprecated, users should refer to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVOption.html#/s:11SwiftFFmpeg8AVOptionV4helpSSSgvp\">AVOption.help</a></code> text for more information.</p>","parent_name":"Flag"},"Structs/AVOption/Flag.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Flag"},"Structs/AVOption/Flag.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Flag"},"Structs/AVOption/Flag.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Flag"},"Structs/AVOption.html#/s:11SwiftFFmpeg8AVOptionV4nameSSvp":{"name":"name","abstract":"<p>Undocumented</p>","parent_name":"AVOption"},"Structs/AVOption.html#/s:11SwiftFFmpeg8AVOptionV4helpSSSgvp":{"name":"help","abstract":"<p>The short English help text about the option.</p>","parent_name":"AVOption"},"Structs/AVOption.html#/s:11SwiftFFmpeg8AVOptionV6offsetSivp":{"name":"offset","abstract":"<p>The offset relative to the context structure where the option value is stored.","parent_name":"AVOption"},"Structs/AVOption.html#/s:11SwiftFFmpeg8AVOptionV4typeSo0C4TypeVvp":{"name":"type","abstract":"<p>Undocumented</p>","parent_name":"AVOption"},"Structs/AVOption.html#/s:11SwiftFFmpeg8AVOptionV12defaultValueypvp":{"name":"defaultValue","abstract":"<p>The default value for scalar options.</p>","parent_name":"AVOption"},"Structs/AVOption.html#/s:11SwiftFFmpeg8AVOptionV3minSdvp":{"name":"min","abstract":"<p>The minimum valid value for the option.</p>","parent_name":"AVOption"},"Structs/AVOption.html#/s:11SwiftFFmpeg8AVOptionV3maxSdvp":{"name":"max","abstract":"<p>The maximum valid value for the option.</p>","parent_name":"AVOption"},"Structs/AVOption.html#/s:11SwiftFFmpeg8AVOptionV5flagsAC4FlagVvp":{"name":"flags","abstract":"<p>Undocumented</p>","parent_name":"AVOption"},"Structs/AVOption.html#/s:11SwiftFFmpeg8AVOptionV4unitSSSgvp":{"name":"unit","abstract":"<p>The logical unit to which the option belongs.","parent_name":"AVOption"},"Structs/AVOption.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVOption"},"Structs/AVOption/Flag.html":{"name":"Flag","abstract":"<p>Undocumented</p>","parent_name":"AVOption"},"Structs/AVCodecHWConfig/Method.html#/s:11SwiftFFmpeg15AVCodecHWConfigV6MethodV15hwDeviceContextAEvpZ":{"name":"hwDeviceContext","abstract":"<p>The codec supports this format via the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC08hwDeviceD0AA010AVHWDeviceD0CSgvp\">AVCodecContext.hwDeviceContext</a></code> interface.</p>","parent_name":"Method"},"Structs/AVCodecHWConfig/Method.html#/s:11SwiftFFmpeg15AVCodecHWConfigV6MethodV15hwFramesContextAEvpZ":{"name":"hwFramesContext","abstract":"<p>The codec supports this format via the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC08hwFramesD0AA010AVHWFramesD0CSgvp\">AVCodecContext.hwFramesContext</a></code> interface.</p>","parent_name":"Method"},"Structs/AVCodecHWConfig/Method.html#/s:11SwiftFFmpeg15AVCodecHWConfigV6MethodV8internalAEvpZ":{"name":"internal","abstract":"<p>The codec supports this format by some internal method.</p>","parent_name":"Method"},"Structs/AVCodecHWConfig/Method.html#/s:11SwiftFFmpeg15AVCodecHWConfigV6MethodV5adHocAEvpZ":{"name":"adHoc","abstract":"<p>The codec supports this format by some ad-hoc method.</p>","parent_name":"Method"},"Structs/AVCodecHWConfig/Method.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Method"},"Structs/AVCodecHWConfig/Method.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Method"},"Structs/AVCodecHWConfig/Method.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Method"},"Structs/AVCodecHWConfig.html#/s:11SwiftFFmpeg15AVCodecHWConfigV11pixelFormatSo07AVPixelF0Vvp":{"name":"pixelFormat","abstract":"<p>A hardware pixel format which the codec can use.</p>","parent_name":"AVCodecHWConfig"},"Structs/AVCodecHWConfig.html#/s:11SwiftFFmpeg15AVCodecHWConfigV7methodsAC6MethodVvp":{"name":"methods","abstract":"<p>Bit set of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVCodecHWConfig/Method.html\">AVCodecHWConfig.Method</a></code> flags, describing the possible setup methods","parent_name":"AVCodecHWConfig"},"Structs/AVCodecHWConfig.html#/s:11SwiftFFmpeg15AVCodecHWConfigV10deviceTypeSo010AVHWDeviceF0Vvp":{"name":"deviceType","abstract":"<p>The device type associated with the configuration.</p>","parent_name":"AVCodecHWConfig"},"Structs/AVCodecHWConfig/Method.html":{"name":"Method","abstract":"<p>Flags used by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVCodecHWConfig.html#/s:11SwiftFFmpeg15AVCodecHWConfigV7methodsAC6MethodVvp\">methods</a></code>.</p>","parent_name":"AVCodecHWConfig"},"Structs/AVOutputFormat/Flag.html#/s:11SwiftFFmpeg14AVOutputFormatV4FlagV6noFileAEvpZ":{"name":"noFile","abstract":"<p>Muxer will use avio_open, no opened file should be provided by the caller.</p>","parent_name":"Flag"},"Structs/AVOutputFormat/Flag.html#/s:11SwiftFFmpeg14AVOutputFormatV4FlagV10needNumberAEvpZ":{"name":"needNumber","abstract":"<p>Needs &lsquo;%d&rsquo; in filename.</p>","parent_name":"Flag"},"Structs/AVOutputFormat/Flag.html#/s:11SwiftFFmpeg14AVOutputFormatV4FlagV12globalHeaderAEvpZ":{"name":"globalHeader","abstract":"<p>Format wants global header.</p>","parent_name":"Flag"},"Structs/AVOutputFormat/Flag.html#/s:11SwiftFFmpeg14AVOutputFormatV4FlagV12noTimestampsAEvpZ":{"name":"noTimestamps","abstract":"<p>Format does not need / have any timestamps.</p>","parent_name":"Flag"},"Structs/AVOutputFormat/Flag.html#/s:11SwiftFFmpeg14AVOutputFormatV4FlagV11variableFPSAEvpZ":{"name":"variableFPS","abstract":"<p>Format allows variable fps.</p>","parent_name":"Flag"},"Structs/AVOutputFormat/Flag.html#/s:11SwiftFFmpeg14AVOutputFormatV4FlagV12noDimensionsAEvpZ":{"name":"noDimensions","abstract":"<p>Format does not need width/height.</p>","parent_name":"Flag"},"Structs/AVOutputFormat/Flag.html#/s:11SwiftFFmpeg14AVOutputFormatV4FlagV9noStreamsAEvpZ":{"name":"noStreams","abstract":"<p>Format does not require any streams.</p>","parent_name":"Flag"},"Structs/AVOutputFormat/Flag.html#/s:11SwiftFFmpeg14AVOutputFormatV4FlagV10allowFlushAEvpZ":{"name":"allowFlush","abstract":"<p>Format allows flushing. If not set, the muxer will not receive a NULL packet in the <code>write_packet</code> function.</p>","parent_name":"Flag"},"Structs/AVOutputFormat/Flag.html#/s:11SwiftFFmpeg14AVOutputFormatV4FlagV11tsNonstrictAEvpZ":{"name":"tsNonstrict","abstract":"<p>Format does not require strictly increasing timestamps, but they must still be monotonic.</p>","parent_name":"Flag"},"Structs/AVOutputFormat/Flag.html#/s:11SwiftFFmpeg14AVOutputFormatV4FlagV10tsNegativeAEvpZ":{"name":"tsNegative","abstract":"<p>Format allows muxing negative timestamps. If not set the timestamp will be shifted in <code>writeFrame</code> and","parent_name":"Flag"},"Structs/AVOutputFormat/Flag.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Flag"},"Structs/AVOutputFormat/Flag.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Flag"},"Structs/AVOutputFormat/Flag.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Flag"},"Structs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV4nameACSgSS_tcfc":{"name":"init(name:)","abstract":"<p>Find <code>AVOutputFormat</code> based on the short name of the output format.</p>","parent_name":"AVOutputFormat"},"Structs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV4nameSSvp":{"name":"name","abstract":"<p>A comma separated list of short names for the format.</p>","parent_name":"AVOutputFormat"},"Structs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV8longNameSSvp":{"name":"longName","abstract":"<p>Descriptive name for the format, meant to be more human-readable than name.</p>","parent_name":"AVOutputFormat"},"Structs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV10extensionsSSSgvp":{"name":"extensions","abstract":"<p>If extensions are defined, then no probe is done. You should usually not use extension format guessing","parent_name":"AVOutputFormat"},"Structs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV8mimeTypeSSSgvp":{"name":"mimeType","abstract":"<p>Comma-separated list of mime types.</p>","parent_name":"AVOutputFormat"},"Structs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV10audioCodecSo9AVCodecIDVvp":{"name":"audioCodec","abstract":"<p>The default audio codec of the muxer.</p>","parent_name":"AVOutputFormat"},"Structs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV10videoCodecSo9AVCodecIDVvp":{"name":"videoCodec","abstract":"<p>The default video codec of the muxer.</p>","parent_name":"AVOutputFormat"},"Structs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV13subtitleCodecSo9AVCodecIDVvp":{"name":"subtitleCodec","abstract":"<p>The default subtitle codec of the muxer.</p>","parent_name":"AVOutputFormat"},"Structs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV5flagsAC4FlagVvp":{"name":"flags","abstract":"<p>Undocumented</p>","parent_name":"AVOutputFormat"},"Structs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV9privClassAA7AVClassVSgvp":{"name":"privClass","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVClass.html\">AVClass</a></code> for the private context.</p>","parent_name":"AVOutputFormat"},"Structs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV16supportedFormatsSayACGvpZ":{"name":"supportedFormats","abstract":"<p>Get all registered muxers.</p>","parent_name":"AVOutputFormat"},"Structs/AVOutputFormat/Flag.html":{"name":"Flag","abstract":"<p>Flags used by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV5flagsAC4FlagVvp\">flags</a></code>.</p>","parent_name":"AVOutputFormat"},"Structs/AVOutputFormat.html#/s:11SwiftFFmpeg14AVOutputFormatV23withUnsafeObjectPointeryxxSvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVOutputFormat"},"Structs/AVInputFormat/Flag.html#/s:11SwiftFFmpeg13AVInputFormatV4FlagV6noFileAEvpZ":{"name":"noFile","abstract":"<p>Demuxer will use avio_open, no opened file should be provided by the caller.</p>","parent_name":"Flag"},"Structs/AVInputFormat/Flag.html#/s:11SwiftFFmpeg13AVInputFormatV4FlagV10needNumberAEvpZ":{"name":"needNumber","abstract":"<p>Needs &lsquo;%d&rsquo; in filename.</p>","parent_name":"Flag"},"Structs/AVInputFormat/Flag.html#/s:11SwiftFFmpeg13AVInputFormatV4FlagV7showIDsAEvpZ":{"name":"showIDs","abstract":"<p>Show format stream IDs numbers.</p>","parent_name":"Flag"},"Structs/AVInputFormat/Flag.html#/s:11SwiftFFmpeg13AVInputFormatV4FlagV12genericIndexAEvpZ":{"name":"genericIndex","abstract":"<p>Use generic index building code.</p>","parent_name":"Flag"},"Structs/AVInputFormat/Flag.html#/s:11SwiftFFmpeg13AVInputFormatV4FlagV9tsDiscontAEvpZ":{"name":"tsDiscont","abstract":"<p>Format allows timestamp discontinuities. Note, muxers always require valid (monotone) timestamps.</p>","parent_name":"Flag"},"Structs/AVInputFormat/Flag.html#/s:11SwiftFFmpeg13AVInputFormatV4FlagV11noBinSearchAEvpZ":{"name":"noBinSearch","abstract":"<p>Format does not allow to fall back on binary search via read_timestamp.</p>","parent_name":"Flag"},"Structs/AVInputFormat/Flag.html#/s:11SwiftFFmpeg13AVInputFormatV4FlagV11noGenSearchAEvpZ":{"name":"noGenSearch","abstract":"<p>Format does not allow to fall back on generic search.</p>","parent_name":"Flag"},"Structs/AVInputFormat/Flag.html#/s:11SwiftFFmpeg13AVInputFormatV4FlagV10noByteSeekAEvpZ":{"name":"noByteSeek","abstract":"<p>Format does not allow seeking by bytes.</p>","parent_name":"Flag"},"Structs/AVInputFormat/Flag.html#/s:11SwiftFFmpeg13AVInputFormatV4FlagV9seekToPTSAEvpZ":{"name":"seekToPTS","abstract":"<p>Seeking is based on PTS.</p>","parent_name":"Flag"},"Structs/AVInputFormat/Flag.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Flag"},"Structs/AVInputFormat/Flag.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Flag"},"Structs/AVInputFormat/Flag.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Flag"},"Structs/AVInputFormat.html#/s:11SwiftFFmpeg13AVInputFormatV4nameACSgSS_tcfc":{"name":"init(name:)","abstract":"<p>Find <code>AVInputFormat</code> based on the short name of the input format.</p>","parent_name":"AVInputFormat"},"Structs/AVInputFormat.html#/s:11SwiftFFmpeg13AVInputFormatV4nameSSvp":{"name":"name","abstract":"<p>A comma separated list of short names for the format.</p>","parent_name":"AVInputFormat"},"Structs/AVInputFormat.html#/s:11SwiftFFmpeg13AVInputFormatV8longNameSSvp":{"name":"longName","abstract":"<p>Descriptive name for the format, meant to be more human-readable than name.</p>","parent_name":"AVInputFormat"},"Structs/AVInputFormat.html#/s:11SwiftFFmpeg13AVInputFormatV5flagsAC4FlagVvp":{"name":"flags","abstract":"<p>Undocumented</p>","parent_name":"AVInputFormat"},"Structs/AVInputFormat.html#/s:11SwiftFFmpeg13AVInputFormatV10extensionsSSSgvp":{"name":"extensions","abstract":"<p>If extensions are defined, then no probe is done.","parent_name":"AVInputFormat"},"Structs/AVInputFormat.html#/s:11SwiftFFmpeg13AVInputFormatV8mimeTypeSSSgvp":{"name":"mimeType","abstract":"<p>Comma-separated list of mime types.</p>","parent_name":"AVInputFormat"},"Structs/AVInputFormat.html#/s:11SwiftFFmpeg13AVInputFormatV9privClassAA7AVClassVSgvp":{"name":"privClass","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVClass.html\">AVClass</a></code> for the private context.</p>","parent_name":"AVInputFormat"},"Structs/AVInputFormat.html#/s:11SwiftFFmpeg13AVInputFormatV16supportedFormatsSayACGvpZ":{"name":"supportedFormats","abstract":"<p>Get all registered demuxers.</p>","parent_name":"AVInputFormat"},"Structs/AVInputFormat/Flag.html":{"name":"Flag","abstract":"<p>Flags used by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVInputFormat.html#/s:11SwiftFFmpeg13AVInputFormatV5flagsAC4FlagVvp\">flags</a></code>.</p>","parent_name":"AVInputFormat"},"Structs/AVInputFormat.html#/s:11SwiftFFmpeg13AVInputFormatV23withUnsafeObjectPointeryxxSvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVInputFormat"},"Structs/AVFilterLink.html#/s:11SwiftFFmpeg12AVFilterLinkV6sourceAA0C7ContextCvp":{"name":"source","abstract":"<p>The source filter.</p>","parent_name":"AVFilterLink"},"Structs/AVFilterLink.html#/s:11SwiftFFmpeg12AVFilterLinkV11destinationAA0C7ContextCvp":{"name":"destination","abstract":"<p>The destination filter.</p>","parent_name":"AVFilterLink"},"Structs/AVFilterLink.html#/s:11SwiftFFmpeg12AVFilterLinkV9mediaTypeSo07AVMediaF0Vvp":{"name":"mediaType","abstract":"<p>The filter&rsquo;s media type.</p>","parent_name":"AVFilterLink"},"Structs/AVFilterLink.html#/s:11SwiftFFmpeg12AVFilterLinkV8timebaseSo10AVRationalVvp":{"name":"timebase","abstract":"<p>Define the timebase used by the PTS of the frames/samples which will pass through this link.","parent_name":"AVFilterLink"},"Structs/AVFilterLink.html#/s:11SwiftFFmpeg12AVFilterLinkV11pixelFormatSo07AVPixelF0Vvp":{"name":"pixelFormat","abstract":"<p>agreed upon pixel format</p>","parent_name":"AVFilterLink"},"Structs/AVFilterLink.html#/s:11SwiftFFmpeg12AVFilterLinkV5widthSivp":{"name":"width","abstract":"<p>agreed upon image width</p>","parent_name":"AVFilterLink"},"Structs/AVFilterLink.html#/s:11SwiftFFmpeg12AVFilterLinkV6heightSivp":{"name":"height","abstract":"<p>agreed upon image height</p>","parent_name":"AVFilterLink"},"Structs/AVFilterLink.html#/s:11SwiftFFmpeg12AVFilterLinkV17sampleAspectRatioSo10AVRationalVvp":{"name":"sampleAspectRatio","abstract":"<p>agreed upon sample aspect ratio</p>","parent_name":"AVFilterLink"},"Structs/AVFilterLink.html#/s:11SwiftFFmpeg12AVFilterLinkV12sampleFormatSo08AVSampleF0Vvp":{"name":"sampleFormat","abstract":"<p>agreed upon sample format</p>","parent_name":"AVFilterLink"},"Structs/AVFilterLink.html#/s:11SwiftFFmpeg12AVFilterLinkV13channelLayoutAA09AVChannelF0Vvp":{"name":"channelLayout","abstract":"<p>channel layout of current buffer</p>","parent_name":"AVFilterLink"},"Structs/AVFilterLink.html#/s:11SwiftFFmpeg12AVFilterLinkV10sampleRateSivp":{"name":"sampleRate","abstract":"<p>samples per second</p>","parent_name":"AVFilterLink"},"Structs/AVBufferSinkFlag.html#/s:11SwiftFFmpeg16AVBufferSinkFlagV4peekACvpZ":{"name":"peek","abstract":"<p>Tell av_buffersink_get_buffer_ref() to read video/samples buffer","parent_name":"AVBufferSinkFlag"},"Structs/AVBufferSinkFlag.html#/s:11SwiftFFmpeg16AVBufferSinkFlagV9noRequestACvpZ":{"name":"noRequest","abstract":"<p>Tell av_buffersink_get_buffer_ref() not to request a frame from its input.","parent_name":"AVBufferSinkFlag"},"Structs/AVBufferSinkFlag.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"AVBufferSinkFlag"},"Structs/AVBufferSinkFlag.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"AVBufferSinkFlag"},"Structs/AVBufferSinkFlag.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVBufferSinkFlag"},"Structs/AVBufferSourceFlag.html#/s:11SwiftFFmpeg18AVBufferSourceFlagV13noCheckFormatACvpZ":{"name":"noCheckFormat","abstract":"<p>Do not check for format changes.</p>","parent_name":"AVBufferSourceFlag"},"Structs/AVBufferSourceFlag.html#/s:11SwiftFFmpeg18AVBufferSourceFlagV4pushACvpZ":{"name":"push","abstract":"<p>Undocumented</p>","parent_name":"AVBufferSourceFlag"},"Structs/AVBufferSourceFlag.html#/s:11SwiftFFmpeg18AVBufferSourceFlagV13keepReferenceACvpZ":{"name":"keepReference","abstract":"<p>Keep a reference to the frame.","parent_name":"AVBufferSourceFlag"},"Structs/AVBufferSourceFlag.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"AVBufferSourceFlag"},"Structs/AVBufferSourceFlag.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"AVBufferSourceFlag"},"Structs/AVBufferSourceFlag.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVBufferSourceFlag"},"Structs/AVFilter/Flag.html#/s:11SwiftFFmpeg8AVFilterV4FlagV13dynamicInputsAEvpZ":{"name":"dynamicInputs","abstract":"<p>The number of the filter inputs is not determined just by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVFilter.html#/s:11SwiftFFmpeg8AVFilterV6inputsSayAA0C3PadVGSgvp\">AVFilter.inputs</a></code>.","parent_name":"Flag"},"Structs/AVFilter/Flag.html#/s:11SwiftFFmpeg8AVFilterV4FlagV14dynamicOutputsAEvpZ":{"name":"dynamicOutputs","abstract":"<p>The number of the filter outputs is not determined just by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVFilter.html#/s:11SwiftFFmpeg8AVFilterV7outputsSayAA0C3PadVGSgvp\">AVFilter.outputs</a></code>.","parent_name":"Flag"},"Structs/AVFilter/Flag.html#/s:11SwiftFFmpeg8AVFilterV4FlagV12sliceThreadsAEvpZ":{"name":"sliceThreads","abstract":"<p>The filter supports multithreading by splitting frames into multiple parts","parent_name":"Flag"},"Structs/AVFilter/Flag.html#/s:11SwiftFFmpeg8AVFilterV4FlagV22supportTimelineGenericAEvpZ":{"name":"supportTimelineGeneric","abstract":"<p>Some filters support a generic <q>enable</q> expression option that can be used","parent_name":"Flag"},"Structs/AVFilter/Flag.html#/s:11SwiftFFmpeg8AVFilterV4FlagV23supportTimelineInternalAEvpZ":{"name":"supportTimelineInternal","abstract":"<p>Same as <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVFilter/Flag.html#/s:11SwiftFFmpeg8AVFilterV4FlagV22supportTimelineGenericAEvpZ\">supportTimelineGeneric</a></code>, except that the filter will","parent_name":"Flag"},"Structs/AVFilter/Flag.html#/s:11SwiftFFmpeg8AVFilterV4FlagV15supportTimelineAEvpZ":{"name":"supportTimeline","abstract":"<p>Handy mask to test whether the filter supports or no the timeline feature","parent_name":"Flag"},"Structs/AVFilter/Flag.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Flag"},"Structs/AVFilter/Flag.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Flag"},"Structs/AVFilter/Flag.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Flag"},"Structs/AVFilter.html#/s:11SwiftFFmpeg8AVFilterV4nameACSgSS_tcfc":{"name":"init(name:)","abstract":"<p>Get a filter definition matching the given name.</p>","parent_name":"AVFilter"},"Structs/AVFilter.html#/s:11SwiftFFmpeg8AVFilterV4nameSSvp":{"name":"name","abstract":"<p>The name of the filter.</p>","parent_name":"AVFilter"},"Structs/AVFilter.html#/s:11SwiftFFmpeg8AVFilterV6inputsSayAA0C3PadVGSgvp":{"name":"inputs","abstract":"<p>The inputs of the filter.</p>","parent_name":"AVFilter"},"Structs/AVFilter.html#/s:11SwiftFFmpeg8AVFilterV7outputsSayAA0C3PadVGSgvp":{"name":"outputs","abstract":"<p>The outputs of the filter.</p>","parent_name":"AVFilter"},"Structs/AVFilter.html#/s:11SwiftFFmpeg8AVFilterV5flagsAC4FlagVvp":{"name":"flags","abstract":"<p>The flags of the filter.</p>","parent_name":"AVFilter"},"Structs/AVFilter.html#/s:11SwiftFFmpeg8AVFilterV16supportedFiltersSayACGvpZ":{"name":"supportedFilters","abstract":"<p>Get all registered filters.</p>","parent_name":"AVFilter"},"Structs/AVFilter.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVFilter"},"Structs/AVFilter/Flag.html":{"name":"Flag","abstract":"<p>Undocumented</p>","parent_name":"AVFilter"},"Structs/AVFilter.html#/s:11SwiftFFmpeg8AVFilterV23withUnsafeObjectPointeryxxSvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVFilter"},"Structs/AVFilterPad.html#/s:11SwiftFFmpeg11AVFilterPadV4nameSSvp":{"name":"name","abstract":"<p>The name of the filter pad.</p>","parent_name":"AVFilterPad"},"Structs/AVFilterPad.html#/s:11SwiftFFmpeg11AVFilterPadV9mediaTypeSo07AVMediaF0Vvp":{"name":"mediaType","abstract":"<p>The media type of the filter pad.</p>","parent_name":"AVFilterPad"},"Structs/AVFilterPad.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVFilterPad"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV8tryAgainACvpZ":{"name":"tryAgain","abstract":"<p>Resource temporarily unavailable</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV15invalidArgumentACvpZ":{"name":"invalidArgument","abstract":"<p>Invalid argument</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV11outOfMemoryACvpZ":{"name":"outOfMemory","abstract":"<p>Cannot allocate memory</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV10outOfRangeACvpZ":{"name":"outOfRange","abstract":"<p>The value is out of range</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV12invalidValueACvpZ":{"name":"invalidValue","abstract":"<p>The value is not valid</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV8noSystemACvpZ":{"name":"noSystem","abstract":"<p>Function not implemented</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV11bsfNotFoundACvpZ":{"name":"bsfNotFound","abstract":"<p>Bitstream filter not found</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV3bugACvpZ":{"name":"bug","abstract":"<p>Internal bug, also see <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVError.html#/s:11SwiftFFmpeg7AVErrorV4bug2ACvpZ\">bug2</a></code></p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV14bufferTooSmallACvpZ":{"name":"bufferTooSmall","abstract":"<p>Buffer too small</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV15decoderNotFoundACvpZ":{"name":"decoderNotFound","abstract":"<p>Decoder not found</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV15demuxerNotFoundACvpZ":{"name":"demuxerNotFound","abstract":"<p>Demuxer not found</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV15encoderNotFoundACvpZ":{"name":"encoderNotFound","abstract":"<p>Encoder not found</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV3eofACvpZ":{"name":"eof","abstract":"<p>End of file</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV4exitACvpZ":{"name":"exit","abstract":"<p>Immediate exit was requested; the called function should not be restarted</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV8externalACvpZ":{"name":"external","abstract":"<p>Generic error in an external library</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV14filterNotFoundACvpZ":{"name":"filterNotFound","abstract":"<p>Filter not found</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV11invalidDataACvpZ":{"name":"invalidData","abstract":"<p>Invalid data found when processing input</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV13muxerNotFoundACvpZ":{"name":"muxerNotFound","abstract":"<p>Muxer not found</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV14optionNotFoundACvpZ":{"name":"optionNotFound","abstract":"<p>Option not found</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV12patchWelcomeACvpZ":{"name":"patchWelcome","abstract":"<p>Not yet implemented in FFmpeg, patches welcome</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV16protocolNotFoundACvpZ":{"name":"protocolNotFound","abstract":"<p>Protocol not found</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV14streamNotFoundACvpZ":{"name":"streamNotFound","abstract":"<p>Stream not found</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV4bug2ACvpZ":{"name":"bug2","abstract":"<p>This is semantically identical to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVError.html#/s:11SwiftFFmpeg7AVErrorV3bugACvpZ\">bug</a></code>. It has been introduced in Libav after our <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVError.html#/s:11SwiftFFmpeg7AVErrorV3bugACvpZ\">bug</a></code> and","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV7unknownACvpZ":{"name":"unknown","abstract":"<p>Unknown error, typically from an external library</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV12experimentalACvpZ":{"name":"experimental","abstract":"<p>Requested feature is flagged experimental. Set strict_std_compliance if you really want to use it.</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV12inputChangedACvpZ":{"name":"inputChanged","abstract":"<p>Input changed between calls. Reconfiguration is required. (can be OR-ed with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVError.html#/s:11SwiftFFmpeg7AVErrorV13outputChangedACvpZ\">outputChanged</a></code>)</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV13outputChangedACvpZ":{"name":"outputChanged","abstract":"<p>Output changed between calls. Reconfiguration is required. (can be OR-ed with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVError.html#/s:11SwiftFFmpeg7AVErrorV12inputChangedACvpZ\">inputChanged</a></code>)</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV14httpBadRequestACvpZ":{"name":"httpBadRequest","abstract":"<p>Undocumented</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV16httpUnauthorizedACvpZ":{"name":"httpUnauthorized","abstract":"<p>Undocumented</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV13httpForbiddenACvpZ":{"name":"httpForbidden","abstract":"<p>Undocumented</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV12httpNotFoundACvpZ":{"name":"httpNotFound","abstract":"<p>Undocumented</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV12httpOther4xxACvpZ":{"name":"httpOther4xx","abstract":"<p>Undocumented</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV15httpServerErrorACvpZ":{"name":"httpServerError","abstract":"<p>Undocumented</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV4codes5Int32Vvp":{"name":"code","abstract":"<p>Undocumented</p>","parent_name":"AVError"},"Structs/AVError.html#/s:11SwiftFFmpeg7AVErrorV4codeACs5Int32V_tcfc":{"name":"init(code:)","abstract":"<p>Undocumented</p>","parent_name":"AVError"},"Structs/AVError.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVError"},"Structs/AVDeviceInfo.html#/s:11SwiftFFmpeg12AVDeviceInfoV4nameSSvp":{"name":"name","abstract":"<p>The name of the device.</p>","parent_name":"AVDeviceInfo"},"Structs/AVDeviceInfo.html#/s:11SwiftFFmpeg12AVDeviceInfoV11descriptionSSvp":{"name":"description","abstract":"<p>The human friendly name of the device.</p>","parent_name":"AVDeviceInfo"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV13drawHorizBandAEvpZ":{"name":"drawHorizBand","abstract":"<p>Decoder can use draw_horiz_band callback.</p>","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV3dr1AEvpZ":{"name":"dr1","abstract":"<p>Codec uses get_buffer() for allocating buffers and supports custom allocators.","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV9truncatedAEvpZ":{"name":"truncated","abstract":"<p>Undocumented</p>","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV5delayAEvpZ":{"name":"delay","abstract":"<p>Encoder or decoder requires flushing with NULL input at the end in order to","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV14smallLastFrameAEvpZ":{"name":"smallLastFrame","abstract":"<p>Codec can be fed a final frame with a smaller size.","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV9subframesAEvpZ":{"name":"subframes","abstract":"<p>Codec can output multiple frames per <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVPacket.html\">AVPacket</a></code>.","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV12experimentalAEvpZ":{"name":"experimental","abstract":"<p>Codec is experimental and is thus avoided in favor of non experimental encoders.</p>","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV11channelConfAEvpZ":{"name":"channelConf","abstract":"<p>Codec should fill in channel configuration and samplerate instead of container.</p>","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV12frameThreadsAEvpZ":{"name":"frameThreads","abstract":"<p>Codec supports frame-level multithreading.</p>","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV12sliceThreadsAEvpZ":{"name":"sliceThreads","abstract":"<p>Codec supports slice-based (or partition-based) multithreading.</p>","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV11paramChangeAEvpZ":{"name":"paramChange","abstract":"<p>Codec supports changed parameters at any point.</p>","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV11autoThreadsAEvpZ":{"name":"autoThreads","abstract":"<p>Codec supports avctx-&gt;thread_count == 0 (auto).</p>","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV17variableFrameSizeAEvpZ":{"name":"variableFrameSize","abstract":"<p>Audio encoder supports receiving a different number of samples in each call.</p>","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV12avoidProbingAEvpZ":{"name":"avoidProbing","abstract":"<p>Decoder is not a preferred choice for probing.","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV9intraOnlyAEvpZ":{"name":"intraOnly","abstract":"<p>Codec is intra only.</p>","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV8losslessAEvpZ":{"name":"lossless","abstract":"<p>Codec is lossless.</p>","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV8hardwareAEvpZ":{"name":"hardware","abstract":"<p>Codec is backed by a hardware implementation. Typically used to identify a non-hwaccel hardware decoder.","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV6hybridAEvpZ":{"name":"hybrid","abstract":"<p>Codec is potentially backed by a hardware implementation, but not necessarily.","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:11SwiftFFmpeg7AVCodecV3CapV22encoderReorderedOpaqueAEvpZ":{"name":"encoderReorderedOpaque","abstract":"<p>This codec takes the reordered_opaque field from input AVFrames","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Cap"},"Structs/AVCodec/Cap.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Cap"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV15findDecoderByIdyACSgSo0C2IDVFZ":{"name":"findDecoderById(_:)","abstract":"<p>Find a registered decoder with a matching codec ID.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV17findDecoderByNameyACSgSSFZ":{"name":"findDecoderByName(_:)","abstract":"<p>Find a registered decoder with the specified name.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV15findEncoderByIdyACSgSo0C2IDVFZ":{"name":"findEncoderById(_:)","abstract":"<p>Find a registered encoder with a matching codec ID.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV17findEncoderByNameyACSgSSFZ":{"name":"findEncoderByName(_:)","abstract":"<p>Find a registered encoder with the specified name.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV4nameSSvp":{"name":"name","abstract":"<p>The codec&rsquo;s name.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV8longNameSSvp":{"name":"longName","abstract":"<p>The codec&rsquo;s descriptive name, meant to be more human readable than name.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV9mediaTypeSo07AVMediaE0Vvp":{"name":"mediaType","abstract":"<p>The codec&rsquo;s media type.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV2idSo0C2IDVvp":{"name":"id","abstract":"<p>The codec&rsquo;s id.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV12capabilitiesAC3CapVvp":{"name":"capabilities","abstract":"<p>The codec&rsquo;s capabilities.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV19supportedFrameratesSaySo10AVRationalVGSgvp":{"name":"supportedFramerates","abstract":"<p>Returns an array of the framerates supported by the codec.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV21supportedPixelFormatsSaySo13AVPixelFormatVGSgvp":{"name":"supportedPixelFormats","abstract":"<p>Returns an array of the pixel formats supported by the codec.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV20supportedSampleRatesSaySiGSgvp":{"name":"supportedSampleRates","abstract":"<p>Returns an array of the audio samplerates supported by the codec.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV22supportedSampleFormatsSaySo14AVSampleFormatVGSgvp":{"name":"supportedSampleFormats","abstract":"<p>Returns an array of the sample formats supported by the codec.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV23supportedChannelLayoutsSayAA15AVChannelLayoutVGSgvp":{"name":"supportedChannelLayouts","abstract":"<p>Returns an array of the channel layouts supported by the codec.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV9maxLowress5UInt8Vvp":{"name":"maxLowres","abstract":"<p>Maximum value for lowres supported by the decoder.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV9isDecoderSbvp":{"name":"isDecoder","abstract":"<p>A Boolean value indicating whether the codec is decoder.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV9isEncoderSbvp":{"name":"isEncoder","abstract":"<p>A Boolean value indicating whether the codec is encoder.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV8hwConfig2atAA0C8HWConfigVSgSi_tF":{"name":"hwConfig(at:)","abstract":"<p>Retrieve supported hardware configurations for a codec.</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV15supportedCodecsSayACGvpZ":{"name":"supportedCodecs","abstract":"<p>Get all registered codecs.</p>","parent_name":"AVCodec"},"Structs/AVCodec/Cap.html":{"name":"Cap","abstract":"<p>Codec capabilities</p>","parent_name":"AVCodec"},"Structs/AVCodec.html#/s:11SwiftFFmpeg7AVCodecV23withUnsafeObjectPointeryxxSvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVCodec"},"Structs/AVClass.html#/s:11SwiftFFmpeg7AVClassV4nameSSvp":{"name":"name","abstract":"<p>The name of the class.</p>","parent_name":"AVClass"},"Structs/AVClass.html#/s:11SwiftFFmpeg7AVClassV7optionsSayAA8AVOptionVGSgvp":{"name":"options","abstract":"<p>The options of the class.</p>","parent_name":"AVClass"},"Structs/AVClass.html#/s:11SwiftFFmpeg7AVClassV8categorySo0C8Categoryavp":{"name":"category","abstract":"<p>The category of the class. It&rsquo;s used for visualization (like color).</p>","parent_name":"AVClass"},"Structs/AVBitStreamFilter.html#/s:11SwiftFFmpeg17AVBitStreamFilterV4nameACSgSS_tcfc":{"name":"init(name:)","abstract":"<p>Find a bitstream filter with the specified name.</p>","parent_name":"AVBitStreamFilter"},"Structs/AVBitStreamFilter.html#/s:11SwiftFFmpeg17AVBitStreamFilterV4nameSSvp":{"name":"name","abstract":"<p>The name of the bitstream filter.</p>","parent_name":"AVBitStreamFilter"},"Structs/AVBitStreamFilter.html#/s:11SwiftFFmpeg17AVBitStreamFilterV8codecIdsSaySo9AVCodecIDVGSgvp":{"name":"codecIds","abstract":"<p>A list of codec ids supported by the bitstream filter.","parent_name":"AVBitStreamFilter"},"Structs/AVBitStreamFilter.html#/s:11SwiftFFmpeg17AVBitStreamFilterV16supportedFiltersSayACGvpZ":{"name":"supportedFilters","abstract":"<p>Get all registered bitstream filters.</p>","parent_name":"AVBitStreamFilter"},"Structs/AVBitStreamFilter.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVBitStreamFilter"},"Structs/AVBitStreamFilter.html":{"name":"AVBitStreamFilter","abstract":"<p>Undocumented</p>"},"Structs/AVClass.html":{"name":"AVClass","abstract":"<p>Undocumented</p>"},"Structs/AVCodec.html":{"name":"AVCodec","abstract":"<p>Undocumented</p>"},"Structs/AVDeviceInfo.html":{"name":"AVDeviceInfo","abstract":"<p>Structure describes basic parameters of the device.</p>"},"Structs/AVError.html":{"name":"AVError","abstract":"<p>Undocumented</p>"},"Structs/AVFilterPad.html":{"name":"AVFilterPad","abstract":"<p>Undocumented</p>"},"Structs/AVFilter.html":{"name":"AVFilter","abstract":"<p>Undocumented</p>"},"Structs/AVBufferSourceFlag.html":{"name":"AVBufferSourceFlag","abstract":"<p>Undocumented</p>"},"Structs/AVBufferSinkFlag.html":{"name":"AVBufferSinkFlag","abstract":"<p>Undocumented</p>"},"Structs/AVFilterLink.html":{"name":"AVFilterLink","abstract":"<p>A link between two filters. This contains pointers to the source and destination filters"},"Structs/AVInputFormat.html":{"name":"AVInputFormat","abstract":"<p>Undocumented</p>"},"Structs/AVOutputFormat.html":{"name":"AVOutputFormat","abstract":"<p>Undocumented</p>"},"Structs/AVCodecHWConfig.html":{"name":"AVCodecHWConfig","abstract":"<p>Undocumented</p>"},"Structs/AVOption.html":{"name":"AVOption","abstract":"<p>Undocumented</p>"},"Structs/AVChannel.html":{"name":"AVChannel","abstract":"<p>Undocumented</p>"},"Structs/AVChannelLayout.html":{"name":"AVChannelLayout","abstract":"<p>Undocumented</p>"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorP23withUnsafeObjectPointeryqd__qd__SvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE3set_6forKey11searchFlagsySS_SSAA0C10SearchFlagOtKF":{"name":"set(_:forKey:searchFlags:)","abstract":"<p>Set the field of obj with the given name to value.</p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE3set_6forKey11searchFlagsyqd___SSAA0C10SearchFlagOtKs17FixedWidthIntegerRd__lF":{"name":"set(_:forKey:searchFlags:)","abstract":"<p><code>av_opt_set_int</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE3set_6forKey11searchFlagsySd_SSAA0C10SearchFlagOtKF":{"name":"set(_:forKey:searchFlags:)","abstract":"<p><code>av_opt_set_double</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE3set_6forKey11searchFlagsySo10AVRationalV_SSAA0C10SearchFlagOtKF":{"name":"set(_:forKey:searchFlags:)","abstract":"<p><code>av_opt_set_q</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE3set_6forKey11searchFlagsySRys5UInt8VG_SSAA0C10SearchFlagOtKF":{"name":"set(_:forKey:searchFlags:)","abstract":"<p><code>av_opt_set_bin</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE3set_6forKey11searchFlagsySi5width_Si6heightt_SSAA0C10SearchFlagOtKF":{"name":"set(_:forKey:searchFlags:)","abstract":"<p><code>av_opt_set_image_size</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE3set_6forKey11searchFlagsySo13AVPixelFormatV_SSAA0C10SearchFlagOtKF":{"name":"set(_:forKey:searchFlags:)","abstract":"<p><code>av_opt_set_pixel_fmt</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE3set_6forKey11searchFlagsySo14AVSampleFormatV_SSAA0C10SearchFlagOtKF":{"name":"set(_:forKey:searchFlags:)","abstract":"<p><code>av_opt_set_sample_fmt</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE12setVideoRate_6forKey11searchFlagsySo10AVRationalV_SSAA0C10SearchFlagOtKF":{"name":"setVideoRate(_:forKey:searchFlags:)","abstract":"<p><code>av_opt_set_video_rate</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE3set_6forKey11searchFlagsyAA15AVChannelLayoutV_SSAA0C10SearchFlagOtKF":{"name":"set(_:forKey:searchFlags:)","abstract":"<p><code>av_opt_set_channel_layout</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE3set_6forKey11searchFlagsySayqd__G_SSAA0C10SearchFlagOtKs17FixedWidthIntegerRd__lF":{"name":"set(_:forKey:searchFlags:)","abstract":"<p>Set a binary option to an integer list.</p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE6string6forKey11searchFlagsS2S_AA0C10SearchFlagOtKF":{"name":"string(forKey:searchFlags:)","abstract":"<p>Get a value of the option with the given name from an object.</p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE7integer6forKey11searchFlagsqd__SS_AA0C10SearchFlagOtKs17FixedWidthIntegerRd__lF":{"name":"integer(forKey:searchFlags:)","abstract":"<p><code>av_opt_get_int</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE6double6forKey11searchFlagsSdSS_AA0C10SearchFlagOtKF":{"name":"double(forKey:searchFlags:)","abstract":"<p><code>av_opt_get_double</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE8rational6forKey11searchFlagsSo10AVRationalVSS_AA0C10SearchFlagOtKF":{"name":"rational(forKey:searchFlags:)","abstract":"<p><code>av_opt_get_q</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE4size6forKey11searchFlagsSi_SitSS_AA0C10SearchFlagOtKF":{"name":"size(forKey:searchFlags:)","abstract":"<p><code>av_opt_get_image_size</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE11pixelFormat6forKey11searchFlagsSo07AVPixelF0VSS_AA0C10SearchFlagOtKF":{"name":"pixelFormat(forKey:searchFlags:)","abstract":"<p><code>av_opt_get_pixel_fmt</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE12sampleFormat6forKey11searchFlagsSo08AVSampleF0VSS_AA0C10SearchFlagOtKF":{"name":"sampleFormat(forKey:searchFlags:)","abstract":"<p><code>av_opt_get_sample_fmt</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE9videoRate6forKey11searchFlagsSo10AVRationalVSS_AA0C10SearchFlagOtKF":{"name":"videoRate(forKey:searchFlags:)","abstract":"<p><code>av_opt_get_video_rate</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE13channelLayout6forKey11searchFlagss5Int64VSS_AA0C10SearchFlagOtKF":{"name":"channelLayout(forKey:searchFlags:)","abstract":"<p><code>av_opt_get_channel_layout</code></p>","parent_name":"AVOptionAccessor"},"Protocols/AVOptionAccessor.html#/s:11SwiftFFmpeg16AVOptionAccessorPAAE16supportedOptionsSayAA0C0VGvp":{"name":"supportedOptions","abstract":"<p>Returns an array of the options supported by the type.</p>","parent_name":"AVOptionAccessor"},"Protocols/AVClassSupport.html#/s:11SwiftFFmpeg14AVClassSupportP5classAA0C0VvpZ":{"name":"class","abstract":"<p>Undocumented</p>","parent_name":"AVClassSupport"},"Protocols/AVClassSupport.html#/s:11SwiftFFmpeg14AVClassSupportP28withUnsafeClassObjectPointeryqd__qd__SvKXEKlF":{"name":"withUnsafeClassObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVClassSupport"},"Protocols/AVClassSupport.html":{"name":"AVClassSupport","abstract":"<p>Undocumented</p>"},"Protocols/AVOptionAccessor.html":{"name":"AVOptionAccessor","abstract":"<p>Undocumented</p>"},"Functions.html#/s:11SwiftFFmpeg11networkInits5Int32VyF":{"name":"networkInit()","abstract":"<p>Do global initialization of network libraries."},"Functions.html#/s:11SwiftFFmpeg13networkDeinits5Int32VyF":{"name":"networkDeinit()","abstract":"<p>Undo the initialization done by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbFunctions.html#/s:11SwiftFFmpeg11networkInits5Int32VyF\">networkInit()</a></code>."},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4noneABvpZ":{"name":"none","abstract":"<p>Undocumented</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE7YUV420PABvpZ":{"name":"YUV420P","abstract":"<p>planar YUV 4:2:0, 12bpp, (1 Cr &amp; Cb sample per 2x2 Y samples)</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE7YUYV422ABvpZ":{"name":"YUYV422","abstract":"<p>packed YUV 4:2:2, 16bpp, Y0 Cb Y1 Cr</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE5RGB24ABvpZ":{"name":"RGB24","abstract":"<p>packed RGB 8:8:8, 24bpp, RGBRGB&hellip;</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE5BGR24ABvpZ":{"name":"BGR24","abstract":"<p>packed RGB 8:8:8, 24bpp, BGRBGR&hellip;</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE7YUV422PABvpZ":{"name":"YUV422P","abstract":"<p>planar YUV 4:2:2, 16bpp, (1 Cr &amp; Cb sample per 2x1 Y samples)</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE7YUV444PABvpZ":{"name":"YUV444P","abstract":"<p>planar YUV 4:4:4, 24bpp, (1 Cr &amp; Cb sample per 1x1 Y samples)</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE7YUV410PABvpZ":{"name":"YUV410P","abstract":"<p>planar YUV 4:1:0,  9bpp, (1 Cr &amp; Cb sample per 4x4 Y samples)</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE7YUV411PABvpZ":{"name":"YUV411P","abstract":"<p>planar YUV 4:1:1, 12bpp, (1 Cr &amp; Cb sample per 4x1 Y samples)</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE5GRAY8ABvpZ":{"name":"GRAY8","abstract":"<p>Y        ,  8bpp</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE9MONOWHITEABvpZ":{"name":"MONOWHITE","abstract":"<p>Y        ,  1bpp, 0 is white, 1 is black, in each byte pixels are ordered from the msb to the lsb</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE9MONOBLACKABvpZ":{"name":"MONOBLACK","abstract":"<p>Y        ,  1bpp, 0 is black, 1 is white, in each byte pixels are ordered from the msb to the lsb</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4PAL8ABvpZ":{"name":"PAL8","abstract":"<p>8 bits with AV_PIX_FMT_RGB32 palette</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE7UYVY422ABvpZ":{"name":"UYVY422","abstract":"<p>packed YUV 4:2:2, 16bpp, Cb Y0 Cr Y1</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE9UYYVYY411ABvpZ":{"name":"UYYVYY411","abstract":"<p>packed YUV 4:1:1, 12bpp, Cb Y0 Y1 Cr Y2 Y3</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4BGR8ABvpZ":{"name":"BGR8","abstract":"<p>packed RGB 3:3:2,  8bpp, (msb)2B 3G 3R(lsb)</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4BGR4ABvpZ":{"name":"BGR4","abstract":"<p>packed RGB 1:2:1 bitstream,  4bpp, (msb)1B 2G 1R(lsb), a byte contains two pixels, the first pixel in the byte","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE9BGR4_BYTEABvpZ":{"name":"BGR4_BYTE","abstract":"<p>packed RGB 1:2:1,  8bpp, (msb)1B 2G 1R(lsb)</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4RGB8ABvpZ":{"name":"RGB8","abstract":"<p>packed RGB 3:3:2,  8bpp, (msb)2R 3G 3B(lsb)</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4RGB4ABvpZ":{"name":"RGB4","abstract":"<p>packed RGB 1:2:1 bitstream,  4bpp, (msb)1R 2G 1B(lsb), a byte contains two pixels, the first pixel in the byte","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE9RGB4_BYTEABvpZ":{"name":"RGB4_BYTE","abstract":"<p>packed RGB 1:2:1,  8bpp, (msb)1R 2G 1B(lsb)</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4NV12ABvpZ":{"name":"NV12","abstract":"<p>planar YUV 4:2:0, 12bpp, 1 plane for Y and 1 plane for the UV components, which are interleaved","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4NV21ABvpZ":{"name":"NV21","abstract":"<p>as above, but U and V bytes are swapped</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4ARGBABvpZ":{"name":"ARGB","abstract":"<p>packed ARGB 8:8:8:8, 32bpp, ARGBARGB&hellip;</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4RGBAABvpZ":{"name":"RGBA","abstract":"<p>packed RGBA 8:8:8:8, 32bpp, RGBARGBA&hellip;</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4ABGRABvpZ":{"name":"ABGR","abstract":"<p>packed ABGR 8:8:8:8, 32bpp, ABGRABGR&hellip;</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4BGRAABvpZ":{"name":"BGRA","abstract":"<p>packed BGRA 8:8:8:8, 32bpp, BGRABGRA&hellip;</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8GRAY16BEABvpZ":{"name":"GRAY16BE","abstract":"<p>Y        , 16bpp, big-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8GRAY16LEABvpZ":{"name":"GRAY16LE","abstract":"<p>Y        , 16bpp, little-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE7YUV440PABvpZ":{"name":"YUV440P","abstract":"<p>planar YUV 4:4:0 (1 Cr &amp; Cb sample per 1x2 Y samples)</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8YUVA420PABvpZ":{"name":"YUVA420P","abstract":"<p>planar YUV 4:2:0, 20bpp, (1 Cr &amp; Cb sample per 2x2 Y &amp; A samples)</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE7RGB48BEABvpZ":{"name":"RGB48BE","abstract":"<p>packed RGB 16:16:16, 48bpp, 16R, 16G, 16B, the 2-byte value for each R/G/B component is stored as big-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE7RGB48LEABvpZ":{"name":"RGB48LE","abstract":"<p>packed RGB 16:16:16, 48bpp, 16R, 16G, 16B, the 2-byte value for each R/G/B component is stored as little-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8RGB565BEABvpZ":{"name":"RGB565BE","abstract":"<p>packed RGB 5:6:5, 16bpp, (msb)   5R 6G 5B(lsb), big-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8RGB565LEABvpZ":{"name":"RGB565LE","abstract":"<p>packed RGB 5:6:5, 16bpp, (msb)   5R 6G 5B(lsb), little-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8RGB555BEABvpZ":{"name":"RGB555BE","abstract":"<p>packed RGB 5:5:5, 16bpp, (msb)1X 5R 5G 5B(lsb), big-endian   , X=unused/undefined</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8RGB555LEABvpZ":{"name":"RGB555LE","abstract":"<p>packed RGB 5:5:5, 16bpp, (msb)1X 5R 5G 5B(lsb), little-endian, X=unused/undefined</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8BGR565BEABvpZ":{"name":"BGR565BE","abstract":"<p>packed BGR 5:6:5, 16bpp, (msb)   5B 6G 5R(lsb), big-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8BGR565LEABvpZ":{"name":"BGR565LE","abstract":"<p>packed BGR 5:6:5, 16bpp, (msb)   5B 6G 5R(lsb), little-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8BGR555BEABvpZ":{"name":"BGR555BE","abstract":"<p>packed BGR 5:5:5, 16bpp, (msb)1X 5B 5G 5R(lsb), big-endian   , X=unused/undefined</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8BGR555LEABvpZ":{"name":"BGR555LE","abstract":"<p>packed BGR 5:5:5, 16bpp, (msb)1X 5B 5G 5R(lsb), little-endian, X=unused/undefined</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE11YUV420P16LEABvpZ":{"name":"YUV420P16LE","abstract":"<p>planar YUV 4:2:0, 24bpp, (1 Cr &amp; Cb sample per 2x2 Y samples), little-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE11YUV420P16BEABvpZ":{"name":"YUV420P16BE","abstract":"<p>&lt;","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE11YUV422P16LEABvpZ":{"name":"YUV422P16LE","abstract":"<p>planar YUV 4:2:2, 32bpp, (1 Cr &amp; Cb sample per 2x1 Y samples), little-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE11YUV422P16BEABvpZ":{"name":"YUV422P16BE","abstract":"<p>planar YUV 4:2:2, 32bpp, (1 Cr &amp; Cb sample per 2x1 Y samples), big-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE11YUV444P16LEABvpZ":{"name":"YUV444P16LE","abstract":"<p>planar YUV 4:4:4, 48bpp, (1 Cr &amp; Cb sample per 1x1 Y samples), little-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE11YUV444P16BEABvpZ":{"name":"YUV444P16BE","abstract":"<p>planar YUV 4:4:4, 48bpp, (1 Cr &amp; Cb sample per 1x1 Y samples), big-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE9DXVA2_VLDABvpZ":{"name":"DXVA2_VLD","abstract":"<p>HW decoding through DXVA2, Picture.data[3] contains a LPDIRECT3DSURFACE9 pointer</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8RGB444LEABvpZ":{"name":"RGB444LE","abstract":"<p>packed RGB 4:4:4, 16bpp, (msb)4X 4R 4G 4B(lsb), little-endian, X=unused/undefined</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8RGB444BEABvpZ":{"name":"RGB444BE","abstract":"<p>packed RGB 4:4:4, 16bpp, (msb)4X 4R 4G 4B(lsb), big-endian,    X=unused/undefined</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8BGR444LEABvpZ":{"name":"BGR444LE","abstract":"<p>packed BGR 4:4:4, 16bpp, (msb)4X 4B 4G 4R(lsb), little-endian, X=unused/undefined</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE8BGR444BEABvpZ":{"name":"BGR444BE","abstract":"<p>packed BGR 4:4:4, 16bpp, (msb)4X 4B 4G 4R(lsb), big-endian,    X=unused/undefined</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE3YA8ABvpZ":{"name":"YA8","abstract":"<p>8 bits gray, 8 bits alpha</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE5Y400AABvpZ":{"name":"Y400A","abstract":"<p>alias for AV_PIX_FMT_YA8</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE6GRAY8AABvpZ":{"name":"GRAY8A","abstract":"<p>alias for AV_PIX_FMT_YA8</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE7BGR48BEABvpZ":{"name":"BGR48BE","abstract":"<p>packed RGB 16:16:16, 48bpp, 16B, 16G, 16R, the 2-byte value for each R/G/B component is stored as big-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE7BGR48LEABvpZ":{"name":"BGR48LE","abstract":"<p>packed RGB 16:16:16, 48bpp, 16B, 16G, 16R, the 2-byte value for each R/G/B component is stored as little-endian</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE12videoToolboxABvpZ":{"name":"videoToolbox","abstract":"<p>hardware decoding through VideoToolbox</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE2nbABvpZ":{"name":"nb","abstract":"<p>number of pixel formats, <strong>DO NOT USE THIS</strong> if you want to link with shared <code>libav*</code>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4nameABSgSS_tcfc":{"name":"init(name:)","abstract":"<p>Return the pixel format corresponding to name.</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE4nameSSvp":{"name":"name","abstract":"<p>Undocumented</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:So13AVPixelFormatV11SwiftFFmpegE10planeCountSivp":{"name":"planeCount","abstract":"<p>The number of planes in the pixel format.</p>","parent_name":"AVPixelFormat"},"Extensions/AVPixelFormat.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVPixelFormat"},"Extensions/AVPictureType.html#/s:So13AVPictureTypeV11SwiftFFmpegE4noneABvpZ":{"name":"none","abstract":"<p>Undefined</p>","parent_name":"AVPictureType"},"Extensions/AVPictureType.html#/s:So13AVPictureTypeV11SwiftFFmpegE1IABvpZ":{"name":"I","abstract":"<p>Intra</p>","parent_name":"AVPictureType"},"Extensions/AVPictureType.html#/s:So13AVPictureTypeV11SwiftFFmpegE1PABvpZ":{"name":"P","abstract":"<p>Predicted</p>","parent_name":"AVPictureType"},"Extensions/AVPictureType.html#/s:So13AVPictureTypeV11SwiftFFmpegE1BABvpZ":{"name":"B","abstract":"<p>Bi-dir predicted</p>","parent_name":"AVPictureType"},"Extensions/AVPictureType.html#/s:So13AVPictureTypeV11SwiftFFmpegE1SABvpZ":{"name":"S","abstract":"<p>S(GMC)-VOP MPEG-4</p>","parent_name":"AVPictureType"},"Extensions/AVPictureType.html#/s:So13AVPictureTypeV11SwiftFFmpegE2SIABvpZ":{"name":"SI","abstract":"<p>Switching Intra</p>","parent_name":"AVPictureType"},"Extensions/AVPictureType.html#/s:So13AVPictureTypeV11SwiftFFmpegE2SPABvpZ":{"name":"SP","abstract":"<p>Switching Predicted</p>","parent_name":"AVPictureType"},"Extensions/AVPictureType.html#/s:So13AVPictureTypeV11SwiftFFmpegE2BIABvpZ":{"name":"BI","abstract":"<p>BI type</p>","parent_name":"AVPictureType"},"Extensions/AVPictureType.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVPictureType"},"Extensions/AVRounding.html#/s:So10AVRoundingV11SwiftFFmpegE4zeroABvpZ":{"name":"zero","abstract":"<p>Round toward zero.</p>","parent_name":"AVRounding"},"Extensions/AVRounding.html#/s:So10AVRoundingV11SwiftFFmpegE3infABvpZ":{"name":"inf","abstract":"<p>Round away from zero.</p>","parent_name":"AVRounding"},"Extensions/AVRounding.html#/s:So10AVRoundingV11SwiftFFmpegE4downABvpZ":{"name":"down","abstract":"<p>Round toward -infinity.</p>","parent_name":"AVRounding"},"Extensions/AVRounding.html#/s:So10AVRoundingV11SwiftFFmpegE2upABvpZ":{"name":"up","abstract":"<p>Round toward +infinity.</p>","parent_name":"AVRounding"},"Extensions/AVRounding.html#/s:So10AVRoundingV11SwiftFFmpegE7nearInfABvpZ":{"name":"nearInf","abstract":"<p>Round to nearest and halfway cases away from zero.</p>","parent_name":"AVRounding"},"Extensions/AVRounding.html#/s:So10AVRoundingV11SwiftFFmpegE10passMinMaxABvpZ":{"name":"passMinMax","abstract":"<p>Flag telling rescaling functions to pass <code>INT64_MIN</code>/<code>MAX</code> through","parent_name":"AVRounding"},"Extensions/AVRounding.html#/s:So10AVRoundingV11SwiftFFmpegE5unionyA2BF":{"name":"union(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVRounding"},"Extensions/AVRational.html#/s:So10AVRationalV11SwiftFFmpegE8toDoubleSdvp":{"name":"toDouble","abstract":"<p>Convert an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:11SwiftFFmpeg10AVRationala\">AVRational</a></code> to a <code>Double</code>.</p>","parent_name":"AVRational"},"Extensions/AVRational.html#/s:So10AVRationalV11SwiftFFmpegE8invertedABvp":{"name":"inverted","abstract":"<p>Invert a rational. <code>1 / q</code></p>","parent_name":"AVRational"},"Extensions/AVRational.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"AVRational"},"Extensions/AVRational.html#/s:So10AVRationalV11SwiftFFmpegE1poiyA2B_ABtFZ":{"name":"+(_:_:)","abstract":"<p>Add two rationals.</p>","parent_name":"AVRational"},"Extensions/AVRational.html#/s:So10AVRationalV11SwiftFFmpegE1soiyA2B_ABtFZ":{"name":"-(_:_:)","abstract":"<p>Subtract one rational from another.</p>","parent_name":"AVRational"},"Extensions/AVRational.html#/s:So10AVRationalV11SwiftFFmpegE1moiyA2B_ABtFZ":{"name":"*(_:_:)","abstract":"<p>Multiply two rationals.</p>","parent_name":"AVRational"},"Extensions/AVRational.html#/s:So10AVRationalV11SwiftFFmpegE1doiyA2B_ABtFZ":{"name":"/(_:_:)","abstract":"<p>Divide one rational by another.</p>","parent_name":"AVRational"},"Extensions/AVMediaType.html#/s:So11AVMediaTypeV11SwiftFFmpegE7unknownABvpZ":{"name":"unknown","abstract":"<p>Usually treated as <code><a href=\"36f8f5912051ae747ef441d6511ca4cbExtensions/AVMediaType.html#/s:So11AVMediaTypeV11SwiftFFmpegE4dataABvpZ\">data</a></code></p>","parent_name":"AVMediaType"},"Extensions/AVMediaType.html#/s:So11AVMediaTypeV11SwiftFFmpegE5videoABvpZ":{"name":"video","abstract":"<p>Undocumented</p>","parent_name":"AVMediaType"},"Extensions/AVMediaType.html#/s:So11AVMediaTypeV11SwiftFFmpegE5audioABvpZ":{"name":"audio","abstract":"<p>Undocumented</p>","parent_name":"AVMediaType"},"Extensions/AVMediaType.html#/s:So11AVMediaTypeV11SwiftFFmpegE4dataABvpZ":{"name":"data","abstract":"<p>Opaque data information usually continuous</p>","parent_name":"AVMediaType"},"Extensions/AVMediaType.html#/s:So11AVMediaTypeV11SwiftFFmpegE8subtitleABvpZ":{"name":"subtitle","abstract":"<p>Undocumented</p>","parent_name":"AVMediaType"},"Extensions/AVMediaType.html#/s:So11AVMediaTypeV11SwiftFFmpegE10attachmentABvpZ":{"name":"attachment","abstract":"<p>Opaque data information usually sparse</p>","parent_name":"AVMediaType"},"Extensions/AVMediaType.html#/s:So11AVMediaTypeV11SwiftFFmpegE2nbABvpZ":{"name":"nb","abstract":"<p>Undocumented</p>","parent_name":"AVMediaType"},"Extensions/AVMediaType.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVMediaType"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE4noneABvpZ":{"name":"none","abstract":"<p>Undocumented</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE2u8ABvpZ":{"name":"u8","abstract":"<p>unsigned 8 bits</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE3s16ABvpZ":{"name":"s16","abstract":"<p>signed 16 bits</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE3s32ABvpZ":{"name":"s32","abstract":"<p>signed 32 bits</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE3fltABvpZ":{"name":"flt","abstract":"<p>float</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE3dblABvpZ":{"name":"dbl","abstract":"<p>double</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE3u8pABvpZ":{"name":"u8p","abstract":"<p>unsigned 8 bits, planar</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE4s16pABvpZ":{"name":"s16p","abstract":"<p>signed 16 bits, planar</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE4s32pABvpZ":{"name":"s32p","abstract":"<p>signed 32 bits, planar</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE4fltpABvpZ":{"name":"fltp","abstract":"<p>float, planar</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE4dblpABvpZ":{"name":"dblp","abstract":"<p>double, planar</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE3s64ABvpZ":{"name":"s64","abstract":"<p>signed 64 bits</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE4s64pABvpZ":{"name":"s64p","abstract":"<p>signed 64 bits, planar</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE2nbABvpZ":{"name":"nb","abstract":"<p>Number of sample formats. <strong>DO NOT USE</strong> if linking dynamically.</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE4nameABSgSS_tcfc":{"name":"init(name:)","abstract":"<p>Return a sample format corresponding to name, or <code>nil</code> if the sample format does not exist.</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE4nameSSSgvp":{"name":"name","abstract":"<p>The name of the sample format, or <code>nil</code> if sample format is not recognized.</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE14bytesPerSampleSivp":{"name":"bytesPerSample","abstract":"<p>The number of bytes per sample or zero if unknown for the given sample format.</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE8isPlanarSbvp":{"name":"isPlanar","abstract":"<p>A Boolean value indicating whether the sample format is planar.</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE8isPackedSbvp":{"name":"isPacked","abstract":"<p>A Boolean value indicating whether the sample format is packed.</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE8toPlanarABSgyF":{"name":"toPlanar()","abstract":"<p>Return the planar alternative form of the given sample format, or <code>nil</code> if the planar sample format does not exist.</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:So14AVSampleFormatV11SwiftFFmpegE8toPackedABSgyF":{"name":"toPacked()","abstract":"<p>Return the packed alternative form of the given sample format, or <code>nil</code> if the packed sample format does not exist.</p>","parent_name":"AVSampleFormat"},"Extensions/AVSampleFormat.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVSampleFormat"},"Extensions/AVDiscard.html#/s:So9AVDiscardV11SwiftFFmpegE4noneABvpZ":{"name":"none","abstract":"<p>discard nothing</p>","parent_name":"AVDiscard"},"Extensions/AVDiscard.html#/s:So9AVDiscardV11SwiftFFmpegE7defaultABvpZ":{"name":"default","abstract":"<p>discard useless packets like 0 size packets in avi</p>","parent_name":"AVDiscard"},"Extensions/AVDiscard.html#/s:So9AVDiscardV11SwiftFFmpegE6nonRefABvpZ":{"name":"nonRef","abstract":"<p>discard all non reference</p>","parent_name":"AVDiscard"},"Extensions/AVDiscard.html#/s:So9AVDiscardV11SwiftFFmpegE5bidirABvpZ":{"name":"bidir","abstract":"<p>discard all bidirectional frames</p>","parent_name":"AVDiscard"},"Extensions/AVDiscard.html#/s:So9AVDiscardV11SwiftFFmpegE8nonIntraABvpZ":{"name":"nonIntra","abstract":"<p>discard all non intra frames</p>","parent_name":"AVDiscard"},"Extensions/AVDiscard.html#/s:So9AVDiscardV11SwiftFFmpegE6nonKeyABvpZ":{"name":"nonKey","abstract":"<p>discard all frames except keyframes</p>","parent_name":"AVDiscard"},"Extensions/AVDiscard.html#/s:So9AVDiscardV11SwiftFFmpegE3allABvpZ":{"name":"all","abstract":"<p>discard all</p>","parent_name":"AVDiscard"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE5flagsABvpZ":{"name":"flags","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE3intABvpZ":{"name":"int","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE5int64ABvpZ":{"name":"int64","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE6doubleABvpZ":{"name":"double","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE5floatABvpZ":{"name":"float","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE6stringABvpZ":{"name":"string","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE8rationalABvpZ":{"name":"rational","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE6binaryABvpZ":{"name":"binary","abstract":"<p>offset must point to a pointer immediately followed by an int for the length</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE4dictABvpZ":{"name":"dict","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE6uint64ABvpZ":{"name":"uint64","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE5constABvpZ":{"name":"const","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE9imageSizeABvpZ":{"name":"imageSize","abstract":"<p>offset must point to two consecutive integers</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE11pixelFormatABvpZ":{"name":"pixelFormat","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE12sampleFormatABvpZ":{"name":"sampleFormat","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE9videoRateABvpZ":{"name":"videoRate","abstract":"<p>offset must point to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:11SwiftFFmpeg10AVRationala\">AVRational</a></code></p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE8durationABvpZ":{"name":"duration","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE5colorABvpZ":{"name":"color","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE13channelLayoutABvpZ":{"name":"channelLayout","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:So12AVOptionTypeV11SwiftFFmpegE4boolABvpZ":{"name":"bool","abstract":"<p>Undocumented</p>","parent_name":"AVOptionType"},"Extensions/AVOptionType.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVOptionType"},"Extensions/AVIODirEntryType.html#/s:So16AVIODirEntryTypeV11SwiftFFmpegE7unknownABvpZ":{"name":"unknown","abstract":"<p>Undocumented</p>","parent_name":"AVIODirEntryType"},"Extensions/AVIODirEntryType.html#/s:So16AVIODirEntryTypeV11SwiftFFmpegE11blockDeviceABvpZ":{"name":"blockDevice","abstract":"<p>Undocumented</p>","parent_name":"AVIODirEntryType"},"Extensions/AVIODirEntryType.html#/s:So16AVIODirEntryTypeV11SwiftFFmpegE15characterDeviceABvpZ":{"name":"characterDevice","abstract":"<p>Undocumented</p>","parent_name":"AVIODirEntryType"},"Extensions/AVIODirEntryType.html#/s:So16AVIODirEntryTypeV11SwiftFFmpegE9directoryABvpZ":{"name":"directory","abstract":"<p>Undocumented</p>","parent_name":"AVIODirEntryType"},"Extensions/AVIODirEntryType.html#/s:So16AVIODirEntryTypeV11SwiftFFmpegE9namedPipeABvpZ":{"name":"namedPipe","abstract":"<p>Undocumented</p>","parent_name":"AVIODirEntryType"},"Extensions/AVIODirEntryType.html#/s:So16AVIODirEntryTypeV11SwiftFFmpegE12symbolicLinkABvpZ":{"name":"symbolicLink","abstract":"<p>Undocumented</p>","parent_name":"AVIODirEntryType"},"Extensions/AVIODirEntryType.html#/s:So16AVIODirEntryTypeV11SwiftFFmpegE6socketABvpZ":{"name":"socket","abstract":"<p>Undocumented</p>","parent_name":"AVIODirEntryType"},"Extensions/AVIODirEntryType.html#/s:So16AVIODirEntryTypeV11SwiftFFmpegE4fileABvpZ":{"name":"file","abstract":"<p>Undocumented</p>","parent_name":"AVIODirEntryType"},"Extensions/AVIODirEntryType.html#/s:So16AVIODirEntryTypeV11SwiftFFmpegE6serverABvpZ":{"name":"server","abstract":"<p>Undocumented</p>","parent_name":"AVIODirEntryType"},"Extensions/AVIODirEntryType.html#/s:So16AVIODirEntryTypeV11SwiftFFmpegE5shareABvpZ":{"name":"share","abstract":"<p>Undocumented</p>","parent_name":"AVIODirEntryType"},"Extensions/AVIODirEntryType.html#/s:So16AVIODirEntryTypeV11SwiftFFmpegE9workgroupABvpZ":{"name":"workgroup","abstract":"<p>Undocumented</p>","parent_name":"AVIODirEntryType"},"Extensions/AVIODirEntryType.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVIODirEntryType"},"Extensions/AVHWFrameTransferDirection.html#/s:So26AVHWFrameTransferDirectionV11SwiftFFmpegE4fromABvpZ":{"name":"from","abstract":"<p>Transfer the data from the queried hw frame.</p>","parent_name":"AVHWFrameTransferDirection"},"Extensions/AVHWFrameTransferDirection.html#/s:So26AVHWFrameTransferDirectionV11SwiftFFmpegE2toABvpZ":{"name":"to","abstract":"<p>Transfer the data to the queried hw frame.</p>","parent_name":"AVHWFrameTransferDirection"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE4noneABvpZ":{"name":"none","abstract":"<p>Do not use any hardware acceleration (the default).</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE5vdpauABvpZ":{"name":"vdpau","abstract":"<p>Use VDPAU (Video Decode and Presentation API for Unix) hardware acceleration.</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE4cudaABvpZ":{"name":"cuda","abstract":"<p>Use CUDA (Compute Unified Device Architecture, NVIDIA) hardware acceleration.</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE5dxva2ABvpZ":{"name":"dxva2","abstract":"<p>Use DXVA2 (DirectX Video Acceleration) hardware acceleration.</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE3qsvABvpZ":{"name":"qsv","abstract":"<p>Use QSV (Intel Quick Sync Video) hardware acceleration.</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE12videoToolboxABvpZ":{"name":"videoToolbox","abstract":"<p>Use VideoToolbox (Apple) hardware acceleration.</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE7d3d11vaABvpZ":{"name":"d3d11va","abstract":"<p>Use D3D11VA (Direct3D 11 Graphics) hardware acceleration.</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE3drmABvpZ":{"name":"drm","abstract":"<p>Use DRM (Direct Rendering Manage) hardware acceleration.</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE6openCLABvpZ":{"name":"openCL","abstract":"<p>Use OpenCL hardware acceleration.</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE10mediaCodecABvpZ":{"name":"mediaCodec","abstract":"<p>Use MediaCodec (Android) hardware acceleration.</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE4nameABSgSS_tcfc":{"name":"init(name:)","abstract":"<p>Return an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:11SwiftFFmpeg14AVHWDeviceTypea\">AVHWDeviceType</a></code> corresponding to name, or <code>nil</code> if the device type does not exist.</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE4nameSSSgvp":{"name":"name","abstract":"<p>The name of the device type.</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:So14AVHWDeviceTypeV11SwiftFFmpegE20supportedDeviceTypesSayABGyFZ":{"name":"supportedDeviceTypes()","abstract":"<p>Get all supported device types.</p>","parent_name":"AVHWDeviceType"},"Extensions/AVHWDeviceType.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVHWDeviceType"},"Extensions/AVDevToAppMessageType.html#/s:So21AVDevToAppMessageTypeV11SwiftFFmpegE4noneABvpZ":{"name":"none","abstract":"<p>Dummy message.</p>","parent_name":"AVDevToAppMessageType"},"Extensions/AVDevToAppMessageType.html#/s:So21AVDevToAppMessageTypeV11SwiftFFmpegE18createWindowBufferABvpZ":{"name":"createWindowBuffer","abstract":"<p>Create window buffer message.</p>","parent_name":"AVDevToAppMessageType"},"Extensions/AVDevToAppMessageType.html#/s:So21AVDevToAppMessageTypeV11SwiftFFmpegE19prepareWindowBufferABvpZ":{"name":"prepareWindowBuffer","abstract":"<p>Prepare window buffer message.</p>","parent_name":"AVDevToAppMessageType"},"Extensions/AVDevToAppMessageType.html#/s:So21AVDevToAppMessageTypeV11SwiftFFmpegE19displayWindowBufferABvpZ":{"name":"displayWindowBuffer","abstract":"<p>Display window buffer message.</p>","parent_name":"AVDevToAppMessageType"},"Extensions/AVDevToAppMessageType.html#/s:So21AVDevToAppMessageTypeV11SwiftFFmpegE19destroyWindowBufferABvpZ":{"name":"destroyWindowBuffer","abstract":"<p>Destroy window buffer message.</p>","parent_name":"AVDevToAppMessageType"},"Extensions/AVDevToAppMessageType.html#/s:So21AVDevToAppMessageTypeV11SwiftFFmpegE14bufferOverflowABvpZ":{"name":"bufferOverflow","abstract":"<p>Buffer fullness status messages.</p>","parent_name":"AVDevToAppMessageType"},"Extensions/AVDevToAppMessageType.html#/s:So21AVDevToAppMessageTypeV11SwiftFFmpegE15bufferUnderflowABvpZ":{"name":"bufferUnderflow","abstract":"<p>Undocumented</p>","parent_name":"AVDevToAppMessageType"},"Extensions/AVDevToAppMessageType.html#/s:So21AVDevToAppMessageTypeV11SwiftFFmpegE14bufferReadableABvpZ":{"name":"bufferReadable","abstract":"<p>Buffer readable/writable.</p>","parent_name":"AVDevToAppMessageType"},"Extensions/AVDevToAppMessageType.html#/s:So21AVDevToAppMessageTypeV11SwiftFFmpegE14bufferWritableABvpZ":{"name":"bufferWritable","abstract":"<p>Undocumented</p>","parent_name":"AVDevToAppMessageType"},"Extensions/AVDevToAppMessageType.html#/s:So21AVDevToAppMessageTypeV11SwiftFFmpegE16muteStateChangedABvpZ":{"name":"muteStateChanged","abstract":"<p>Mute state change message.</p>","parent_name":"AVDevToAppMessageType"},"Extensions/AVDevToAppMessageType.html#/s:So21AVDevToAppMessageTypeV11SwiftFFmpegE18volumeLevelChangedABvpZ":{"name":"volumeLevelChanged","abstract":"<p>Volume level change message.</p>","parent_name":"AVDevToAppMessageType"},"Extensions/AVAppToDevMessageType.html#/s:So21AVAppToDevMessageTypeV11SwiftFFmpegE4noneABvpZ":{"name":"none","abstract":"<p>Dummy message.</p>","parent_name":"AVAppToDevMessageType"},"Extensions/AVAppToDevMessageType.html#/s:So21AVAppToDevMessageTypeV11SwiftFFmpegE10windowSizeABvpZ":{"name":"windowSize","abstract":"<p>Window size change message.</p>","parent_name":"AVAppToDevMessageType"},"Extensions/AVAppToDevMessageType.html#/s:So21AVAppToDevMessageTypeV11SwiftFFmpegE13windowRepaintABvpZ":{"name":"windowRepaint","abstract":"<p>Repaint request message.</p>","parent_name":"AVAppToDevMessageType"},"Extensions/AVAppToDevMessageType.html#/s:So21AVAppToDevMessageTypeV11SwiftFFmpegE5pauseABvpZ":{"name":"pause","abstract":"<p>Request pause/play.</p>","parent_name":"AVAppToDevMessageType"},"Extensions/AVAppToDevMessageType.html#/s:So21AVAppToDevMessageTypeV11SwiftFFmpegE11togglePauseABvpZ":{"name":"togglePause","abstract":"<p>Undocumented</p>","parent_name":"AVAppToDevMessageType"},"Extensions/AVAppToDevMessageType.html#/s:So21AVAppToDevMessageTypeV11SwiftFFmpegE9setVolumeABvpZ":{"name":"setVolume","abstract":"<p>Volume control message.</p>","parent_name":"AVAppToDevMessageType"},"Extensions/AVAppToDevMessageType.html#/s:So21AVAppToDevMessageTypeV11SwiftFFmpegE4muteABvpZ":{"name":"mute","abstract":"<p>Mute control messages.</p>","parent_name":"AVAppToDevMessageType"},"Extensions/AVAppToDevMessageType.html#/s:So21AVAppToDevMessageTypeV11SwiftFFmpegE6unmuteABvpZ":{"name":"unmute","abstract":"<p>Undocumented</p>","parent_name":"AVAppToDevMessageType"},"Extensions/AVAppToDevMessageType.html#/s:So21AVAppToDevMessageTypeV11SwiftFFmpegE10toggleMuteABvpZ":{"name":"toggleMute","abstract":"<p>Undocumented</p>","parent_name":"AVAppToDevMessageType"},"Extensions/AVAppToDevMessageType.html#/s:So21AVAppToDevMessageTypeV11SwiftFFmpegE9getVolumeABvpZ":{"name":"getVolume","abstract":"<p>Get volume/mute messages.</p>","parent_name":"AVAppToDevMessageType"},"Extensions/AVAppToDevMessageType.html#/s:So21AVAppToDevMessageTypeV11SwiftFFmpegE7getMuteABvpZ":{"name":"getMute","abstract":"<p>Undocumented</p>","parent_name":"AVAppToDevMessageType"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE4noneABvpZ":{"name":"none","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE10MPEG1VIDEOABvpZ":{"name":"MPEG1VIDEO","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE10MPEG2VIDEOABvpZ":{"name":"MPEG2VIDEO","abstract":"<p>preferred ID for MPEG-&frac12; video decoding</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE4H261ABvpZ":{"name":"H261","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE4H263ABvpZ":{"name":"H263","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE5MPEG4ABvpZ":{"name":"MPEG4","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE4H264ABvpZ":{"name":"H264","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3VP3ABvpZ":{"name":"VP3","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3PNGABvpZ":{"name":"PNG","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3PGMABvpZ":{"name":"PGM","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3BMPABvpZ":{"name":"BMP","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE8JPEG2000ABvpZ":{"name":"JPEG2000","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3VP5ABvpZ":{"name":"VP5","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3VP6ABvpZ":{"name":"VP6","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE4TIFFABvpZ":{"name":"TIFF","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3GIFABvpZ":{"name":"GIF","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3VP8ABvpZ":{"name":"VP8","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3VP9ABvpZ":{"name":"VP9","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE4WEBPABvpZ":{"name":"WEBP","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE4HEVCABvpZ":{"name":"HEVC","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3VP7ABvpZ":{"name":"VP7","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE4APNGABvpZ":{"name":"APNG","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3AV1ABvpZ":{"name":"AV1","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3SVGABvpZ":{"name":"SVG","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE11FIRST_AUDIOABvpZ":{"name":"FIRST_AUDIO","abstract":"<p>A dummy id pointing at the start of audio codecs</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_S16LEABvpZ":{"name":"PCM_S16LE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_S16BEABvpZ":{"name":"PCM_S16BE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_U16LEABvpZ":{"name":"PCM_U16LE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_U16BEABvpZ":{"name":"PCM_U16BE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE6PCM_S8ABvpZ":{"name":"PCM_S8","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE6PCM_U8ABvpZ":{"name":"PCM_U8","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_MULAWABvpZ":{"name":"PCM_MULAW","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE8PCM_ALAWABvpZ":{"name":"PCM_ALAW","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_S32LEABvpZ":{"name":"PCM_S32LE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_S32BEABvpZ":{"name":"PCM_S32BE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_U32LEABvpZ":{"name":"PCM_U32LE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_U32BEABvpZ":{"name":"PCM_U32BE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_S24LEABvpZ":{"name":"PCM_S24LE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_S24BEABvpZ":{"name":"PCM_S24BE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_U24LEABvpZ":{"name":"PCM_U24LE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_U24BEABvpZ":{"name":"PCM_U24BE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE11PCM_S24DAUDABvpZ":{"name":"PCM_S24DAUD","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE8PCM_ZORKABvpZ":{"name":"PCM_ZORK","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE16PCM_S16LE_PLANARABvpZ":{"name":"PCM_S16LE_PLANAR","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE7PCM_DVDABvpZ":{"name":"PCM_DVD","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_F32BEABvpZ":{"name":"PCM_F32BE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_F32LEABvpZ":{"name":"PCM_F32LE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_F64BEABvpZ":{"name":"PCM_F64BE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_F64LEABvpZ":{"name":"PCM_F64LE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE10PCM_BLURAYABvpZ":{"name":"PCM_BLURAY","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE7PCM_LXFABvpZ":{"name":"PCM_LXF","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE5S302MABvpZ":{"name":"S302M","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE13PCM_S8_PLANARABvpZ":{"name":"PCM_S8_PLANAR","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE16PCM_S24LE_PLANARABvpZ":{"name":"PCM_S24LE_PLANAR","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE16PCM_S32LE_PLANARABvpZ":{"name":"PCM_S32LE_PLANAR","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE16PCM_S16BE_PLANARABvpZ":{"name":"PCM_S16BE_PLANAR","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_S64LEABvpZ":{"name":"PCM_S64LE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_S64BEABvpZ":{"name":"PCM_S64BE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_F16LEABvpZ":{"name":"PCM_F16LE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9PCM_F24LEABvpZ":{"name":"PCM_F24LE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE6AMR_NBABvpZ":{"name":"AMR_NB","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE6AMR_WBABvpZ":{"name":"AMR_WB","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3MP2ABvpZ":{"name":"MP2","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3MP3ABvpZ":{"name":"MP3","abstract":"<p>preferred ID for decoding MPEG audio layer 1, 2 or 3</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3AACABvpZ":{"name":"AAC","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE4FLACABvpZ":{"name":"FLAC","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3APEABvpZ":{"name":"APE","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE3MP1ABvpZ":{"name":"MP1","abstract":"<p>Undocumented</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE4nameSSvp":{"name":"name","abstract":"<p>The name of the codec.</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:So9AVCodecIDV11SwiftFFmpegE9mediaTypeSo07AVMediaF0Vvp":{"name":"mediaType","abstract":"<p>The media type of the codec.</p>","parent_name":"AVCodecID"},"Extensions/AVCodecID.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVCodecID"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE2naABvpZ":{"name":"na","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE5inputABvpZ":{"name":"input","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE6outputABvpZ":{"name":"output","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE5muxerABvpZ":{"name":"muxer","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE7demuxerABvpZ":{"name":"demuxer","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE7encoderABvpZ":{"name":"encoder","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE7decoderABvpZ":{"name":"decoder","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE6filterABvpZ":{"name":"filter","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE15bitStreamFilterABvpZ":{"name":"bitStreamFilter","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE8swscalerABvpZ":{"name":"swscaler","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE11swresamplerABvpZ":{"name":"swresampler","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE17deviceVideoOutputABvpZ":{"name":"deviceVideoOutput","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE16deviceVideoInputABvpZ":{"name":"deviceVideoInput","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE17deviceAudioOutputABvpZ":{"name":"deviceAudioOutput","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE16deviceAudioInputABvpZ":{"name":"deviceAudioInput","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE12deviceOutputABvpZ":{"name":"deviceOutput","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE11deviceInputABvpZ":{"name":"deviceInput","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:So15AVClassCategorya11SwiftFFmpegE2nbABvpZ":{"name":"nb","abstract":"<p>Undocumented</p>","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVClassCategory"},"Extensions/AVClassCategory.html":{"name":"AVClassCategory","abstract":"<p>Undocumented</p>"},"Extensions/AVCodecID.html":{"name":"AVCodecID","abstract":"<p>Undocumented</p>"},"Extensions/AVAppToDevMessageType.html":{"name":"AVAppToDevMessageType"},"Extensions/AVDevToAppMessageType.html":{"name":"AVDevToAppMessageType"},"Extensions/AVHWDeviceType.html":{"name":"AVHWDeviceType","abstract":"<p>Undocumented</p>"},"Extensions/AVHWFrameTransferDirection.html":{"name":"AVHWFrameTransferDirection","abstract":"<p>Undocumented</p>"},"Extensions/AVIODirEntryType.html":{"name":"AVIODirEntryType"},"Extensions/AVOptionType.html":{"name":"AVOptionType","abstract":"<p>Undocumented</p>"},"Extensions/AVDiscard.html":{"name":"AVDiscard","abstract":"<p>Undocumented</p>"},"Extensions/AVSampleFormat.html":{"name":"AVSampleFormat","abstract":"<p>Undocumented</p>"},"Extensions/AVMediaType.html":{"name":"AVMediaType","abstract":"<p>Undocumented</p>"},"Extensions/AVRational.html":{"name":"AVRational"},"Extensions/AVRounding.html":{"name":"AVRounding"},"Extensions/AVPictureType.html":{"name":"AVPictureType","abstract":"<p>Undocumented</p>"},"Extensions/AVPixelFormat.html":{"name":"AVPixelFormat","abstract":"<p>Undocumented</p>"},"Enums/AVTimestamp.html#/s:11SwiftFFmpeg11AVTimestampO8timebases5Int32VvpZ":{"name":"timebase","abstract":"<p>Internal timebase represented as integer</p>","parent_name":"AVTimestamp"},"Enums/AVTimestamp.html#/s:11SwiftFFmpeg11AVTimestampO9timebaseQSo10AVRationalVvpZ":{"name":"timebaseQ","abstract":"<p>Internal timebase represented as fractional value</p>","parent_name":"AVTimestamp"},"Enums/AVTimestamp.html#/s:11SwiftFFmpeg11AVTimestampO5noPTSs5Int64VvpZ":{"name":"noPTS","abstract":"<p>Undefined timestamp value.</p>","parent_name":"AVTimestamp"},"Enums/AVTimestamp.html#/s:11SwiftFFmpeg11AVTimestampO16compareTimestampySis5Int64V_So10AVRationalVAfHtFZ":{"name":"compareTimestamp(_:_:_:_:)","abstract":"<p>Compare two timestamps each in its own timebase.</p>","parent_name":"AVTimestamp"},"Enums/AVMath.html#/s:11SwiftFFmpeg6AVMathO7rescaleys5Int64Vx_xxSo10AVRoundingVtSzRzlFZ":{"name":"rescale(_:_:_:_:)","abstract":"<p>Rescale a integer with specified rounding.</p>","parent_name":"AVMath"},"Enums/AVMath.html#/s:11SwiftFFmpeg6AVMathO7rescaleys5Int64Vx_So10AVRationalVAHSo10AVRoundingVtSzRzlFZ":{"name":"rescale(_:_:_:_:)","abstract":"<p>Rescale a integer by 2 rational numbers with specified rounding.</p>","parent_name":"AVMath"},"Enums/AVOptionSearchFlag.html#/s:11SwiftFFmpeg18AVOptionSearchFlagO8childrenyA2CmF":{"name":"children","abstract":"<p>Search in possible children of the given object first.</p>","parent_name":"AVOptionSearchFlag"},"Enums/AVOptionSearchFlag.html#/s:11SwiftFFmpeg18AVOptionSearchFlagO10fakeObjectyA2CmF":{"name":"fakeObject","abstract":"<p>The obj passed to <code>av_opt_find()</code> is fake – only a double pointer to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVClass.html\">AVClass</a></code>","parent_name":"AVOptionSearchFlag"},"Enums/AVLog/Level.html#/s:11SwiftFFmpeg5AVLogO5LevelV5quietAEvpZ":{"name":"quiet","abstract":"<p>Print no output.</p>","parent_name":"Level"},"Enums/AVLog/Level.html#/s:11SwiftFFmpeg5AVLogO5LevelV5panicAEvpZ":{"name":"panic","abstract":"<p>Undocumented</p>","parent_name":"Level"},"Enums/AVLog/Level.html#/s:11SwiftFFmpeg5AVLogO5LevelV5fatalAEvpZ":{"name":"fatal","abstract":"<p>Something went wrong and recovery is not possible.","parent_name":"Level"},"Enums/AVLog/Level.html#/s:11SwiftFFmpeg5AVLogO5LevelV5errorAEvpZ":{"name":"error","abstract":"<p>Something went wrong and cannot losslessly be recovered.","parent_name":"Level"},"Enums/AVLog/Level.html#/s:11SwiftFFmpeg5AVLogO5LevelV7warningAEvpZ":{"name":"warning","abstract":"<p>Something somehow does not look correct. This may or may not","parent_name":"Level"},"Enums/AVLog/Level.html#/s:11SwiftFFmpeg5AVLogO5LevelV4infoAEvpZ":{"name":"info","abstract":"<p>Standard information.</p>","parent_name":"Level"},"Enums/AVLog/Level.html#/s:11SwiftFFmpeg5AVLogO5LevelV7verboseAEvpZ":{"name":"verbose","abstract":"<p>Detailed information.</p>","parent_name":"Level"},"Enums/AVLog/Level.html#/s:11SwiftFFmpeg5AVLogO5LevelV5debugAEvpZ":{"name":"debug","abstract":"<p>Stuff which is only useful for libav* developers.</p>","parent_name":"Level"},"Enums/AVLog/Level.html#/s:11SwiftFFmpeg5AVLogO5LevelV5traceAEvpZ":{"name":"trace","abstract":"<p>Extremely verbose debugging, useful for libav* development.</p>","parent_name":"Level"},"Enums/AVLog/Level.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Level"},"Enums/AVLog/Level.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Level"},"Enums/AVLog.html#/s:11SwiftFFmpeg5AVLogO5levelAC5LevelVvpZ":{"name":"level","abstract":"<p>Get/set the log level.</p>","parent_name":"AVLog"},"Enums/AVLog.html#/s:11SwiftFFmpeg5AVLogO3log5level7messageyAC5LevelV_SStFZ":{"name":"log(level:message:)","abstract":"<p>Send the specified message to the log if the level is less than or equal","parent_name":"AVLog"},"Enums/AVLog/Level.html":{"name":"Level","abstract":"<p>Undocumented</p>","parent_name":"AVLog"},"Enums/AVIO.html#/s:11SwiftFFmpeg4AVIOO6malloc4sizeSvSgSi_tFZ":{"name":"malloc(size:)","abstract":"<p>Allocate a memory block with alignment suitable for all memory accesses","parent_name":"AVIO"},"Enums/AVIO.html#/s:11SwiftFFmpeg4AVIOO7mallocz4sizeSvSgSi_tFZ":{"name":"mallocz(size:)","abstract":"<p>Allocate a memory block with alignment suitable for all memory accesses","parent_name":"AVIO"},"Enums/AVIO.html#/s:11SwiftFFmpeg4AVIOO7realloc_4sizeSvSgAF_SitFZ":{"name":"realloc(_:size:)","abstract":"<p>Allocate, reallocate, or free a block of memory.</p>","parent_name":"AVIO"},"Enums/AVIO.html#/s:11SwiftFFmpeg4AVIOO4freeyySvSgFZ":{"name":"free(_:)","abstract":"<p>Free a memory block which has been allocated with a function of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/AVIO.html#/s:11SwiftFFmpeg4AVIOO6malloc4sizeSvSgSi_tFZ\">malloc(size:)</a></code> or <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/AVIO.html#/s:11SwiftFFmpeg4AVIOO7realloc_4sizeSvSgAF_SitFZ\">realloc(_:size:)</a></code> family.</p>","parent_name":"AVIO"},"Enums/AVIO.html#/s:11SwiftFFmpeg4AVIOO5freepyySvSgFZ":{"name":"freep(_:)","abstract":"<p>Free a memory block which has been allocated with a function of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/AVIO.html#/s:11SwiftFFmpeg4AVIOO6malloc4sizeSvSgSi_tFZ\">malloc(size:)</a></code> or <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/AVIO.html#/s:11SwiftFFmpeg4AVIOO7realloc_4sizeSvSgAF_SitFZ\">realloc(_:size:)</a></code> family,","parent_name":"AVIO"},"Enums/AVIO.html#/s:11SwiftFFmpeg4AVIOO7fileMap8filename6buffer4sizeySS_SpySpys5UInt8VGSgGSpySiGtKFZ":{"name":"fileMap(filename:buffer:size:)","abstract":"<p>Read the file with name, and put its content in a newly allocated buffer or map it with <code>mmap()</code> when available.","parent_name":"AVIO"},"Enums/AVIO.html#/s:11SwiftFFmpeg4AVIOO9fileUnmap6buffer4sizeySpys5UInt8VG_SitFZ":{"name":"fileUnmap(buffer:size:)","abstract":"<p>Unmap or free the buffer bufptr created by <code>fileMap(filename:buffer:size)</code>.</p>","parent_name":"AVIO"},"Enums/AVIO.html#/s:11SwiftFFmpeg4AVIOO4moveyySS_SStKFZ":{"name":"move(_:_:)","abstract":"<p>Move or rename a resource.</p>","parent_name":"AVIO"},"Enums/AVIO.html#/s:11SwiftFFmpeg4AVIOO6deleteyySSKFZ":{"name":"delete(_:)","abstract":"<p>Delete a resource.</p>","parent_name":"AVIO"},"Enums/AVDevice.html#/s:11SwiftFFmpeg8AVDeviceO13configurationSSvpZ":{"name":"configuration","abstract":"<p>Return the libavdevice build-time configuration.</p>","parent_name":"AVDevice"},"Enums/AVDevice.html#/s:11SwiftFFmpeg8AVDeviceO26supportedAudioInputDevicesSayAA13AVInputFormatVGvpZ":{"name":"supportedAudioInputDevices","abstract":"<p>Get all registered audio input devices.</p>","parent_name":"AVDevice"},"Enums/AVDevice.html#/s:11SwiftFFmpeg8AVDeviceO26supportedVideoInputDevicesSayAA13AVInputFormatVGvpZ":{"name":"supportedVideoInputDevices","abstract":"<p>Get all registered video input devices.</p>","parent_name":"AVDevice"},"Enums/AVDevice.html#/s:11SwiftFFmpeg8AVDeviceO27supportedAudioOutputDevicesSayAA14AVOutputFormatVGvpZ":{"name":"supportedAudioOutputDevices","abstract":"<p>Get all registered audio output devices.</p>","parent_name":"AVDevice"},"Enums/AVDevice.html#/s:11SwiftFFmpeg8AVDeviceO27supportedVideoOutputDevicesSayAA14AVOutputFormatVGvpZ":{"name":"supportedVideoOutputDevices","abstract":"<p>Get all registered video output devices.</p>","parent_name":"AVDevice"},"Enums/AVConstant.html#/s:11SwiftFFmpeg10AVConstantO22inputBufferPaddingSizeSivpZ":{"name":"inputBufferPaddingSize","abstract":"<p>Undocumented</p>","parent_name":"AVConstant"},"Enums/AVConstant.html#/s:11SwiftFFmpeg10AVConstantO18dataPointersNumberSivpZ":{"name":"dataPointersNumber","abstract":"<p>Undocumented</p>","parent_name":"AVConstant"},"Enums/AVConstant.html":{"name":"AVConstant","abstract":"<p>Undocumented</p>"},"Enums/AVDevice.html":{"name":"AVDevice","abstract":"<p>Undocumented</p>"},"Enums/AVIO.html":{"name":"AVIO","abstract":"<p>Undocumented</p>"},"Enums/AVLog.html":{"name":"AVLog","abstract":"<p>Undocumented</p>"},"Enums/AVOptionSearchFlag.html":{"name":"AVOptionSearchFlag","abstract":"<p>Undocumented</p>"},"Enums/AVMath.html":{"name":"AVMath","abstract":"<p>Undocumented</p>"},"Enums/AVTimestamp.html":{"name":"AVTimestamp","abstract":"<p>Undocumented</p>"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV12fastBilinearAEvpZ":{"name":"fastBilinear","abstract":"<p>Select fast bilinear scaling algorithm.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV8bilinearAEvpZ":{"name":"bilinear","abstract":"<p>Select bilinear scaling algorithm.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV7bicubicAEvpZ":{"name":"bicubic","abstract":"<p>Select bicubic scaling algorithm.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV1xAEvpZ":{"name":"x","abstract":"<p>Select experimental scaling algorithm.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV5pointAEvpZ":{"name":"point","abstract":"<p>Select nearest neighbor rescaling algorithm.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV4areaAEvpZ":{"name":"area","abstract":"<p>Select averaging area rescaling algorithm.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV8bicublinAEvpZ":{"name":"bicublin","abstract":"<p>Select bicubic scaling algorithm for the luma component, bilinear for chroma components.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV5gaussAEvpZ":{"name":"gauss","abstract":"<p>Select Gaussian rescaling algorithm.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV4sincAEvpZ":{"name":"sinc","abstract":"<p>Select sinc rescaling algorithm.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV7lanczosAEvpZ":{"name":"lanczos","abstract":"<p>Select Lanczos rescaling algorithm.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV6splineAEvpZ":{"name":"spline","abstract":"<p>Select natural bicubic spline rescaling algorithm.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV9printInfoAEvpZ":{"name":"printInfo","abstract":"<p>Enable printing/debug logging.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV13fullChromaIntAEvpZ":{"name":"fullChromaInt","abstract":"<p>Enable full chroma interpolation.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV13fullChromaInpAEvpZ":{"name":"fullChromaInp","abstract":"<p>Select full chroma input.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV11accurateRndAEvpZ":{"name":"accurateRnd","abstract":"<p>Enable accurate rounding.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:11SwiftFFmpeg10SwsContextC4FlagV8bitexactAEvpZ":{"name":"bitexact","abstract":"<p>Enable bitexact output.</p>","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Flag"},"Classes/SwsContext/Flag.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Flag"},"Classes/SwsContext.html#/s:11SwiftFFmpeg10SwsContextCACycfc":{"name":"init()","abstract":"<p>Create an empty <code>SwsContext</code>.</p>","parent_name":"SwsContext"},"Classes/SwsContext.html#/s:11SwiftFFmpeg10SwsContextC8srcWidth0E6Height0E11PixelFormat03dstF00jG00jhI05flagsACSgSi_SiSo07AVPixelI0VS2iAmC4FlagVtcfc":{"name":"init(srcWidth:srcHeight:srcPixelFormat:dstWidth:dstHeight:dstPixelFormat:flags:)","abstract":"<p>Create an <code>SwsContext</code> use the given parameters.</p>","parent_name":"SwsContext"},"Classes/SwsContext.html#/s:11SwiftFFmpeg10SwsContextC5scale3src0F6Stride0F6SliceY0fH6Height3dst0jG0SiSPySPys5UInt8VGSgG_SPys5Int32VGS2iSPySpyALGSgGARtKF":{"name":"scale(src:srcStride:srcSliceY:srcSliceHeight:dst:dstStride:)","abstract":"<p>Scale the image slice in <code>src</code> and put the resulting scaled slice in the image in <code>dst</code>.</p>","parent_name":"SwsContext"},"Classes/SwsContext.html#/s:11SwiftFFmpeg10SwsContextC13supportsInputySbSo13AVPixelFormatVFZ":{"name":"supportsInput(_:)","abstract":"<p>Returns a Boolean value indicating whether the pixel format is a supported input format.</p>","parent_name":"SwsContext"},"Classes/SwsContext.html#/s:11SwiftFFmpeg10SwsContextC14supportsOutputySbSo13AVPixelFormatVFZ":{"name":"supportsOutput(_:)","abstract":"<p>Returns a Boolean value indicating whether the pixel format is a supported output format.</p>","parent_name":"SwsContext"},"Classes/SwsContext.html#/s:11SwiftFFmpeg10SwsContextC28supportsEndiannessConversionySbSo13AVPixelFormatVFZ":{"name":"supportsEndiannessConversion(_:)","abstract":"<p>Returns a Boolean value indicating whether an endianness conversion is supported.</p>","parent_name":"SwsContext"},"Classes/SwsContext/Flag.html":{"name":"Flag","abstract":"<p>Undocumented</p>","parent_name":"SwsContext"},"Classes/SwsContext.html#/s:11SwiftFFmpeg10SwsContextC5classAA7AVClassVvpZ":{"name":"class","abstract":"<p>Undocumented</p>","parent_name":"SwsContext"},"Classes/SwsContext.html#/s:11SwiftFFmpeg10SwsContextC28withUnsafeClassObjectPointeryxxSvKXEKlF":{"name":"withUnsafeClassObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"SwsContext"},"Classes/SwsContext.html#/s:11SwiftFFmpeg10SwsContextC23withUnsafeObjectPointeryxxSvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"SwsContext"},"Classes/SwrContext.html#/s:11SwiftFFmpeg10SwrContextCACycfc":{"name":"init()","abstract":"<p>Create <code>SwrContext</code>.</p>","parent_name":"SwrContext"},"Classes/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC16dstChannelLayout0E12SampleFormat0eH4Rate03srcfG00khI00khJ0AcA09AVChannelG0V_So08AVSampleI0VSiAkMSitcfc":{"name":"init(dstChannelLayout:dstSampleFormat:dstSampleRate:srcChannelLayout:srcSampleFormat:srcSampleRate:)","abstract":"<p>Create <code>SwrContext</code> if needed and set/reset common parameters.</p>","parent_name":"SwrContext"},"Classes/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC13isInitializedSbvp":{"name":"isInitialized","abstract":"<p>A Boolean value indicating whether the context has been initialized or not.</p>","parent_name":"SwrContext"},"Classes/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC10setOptions16dstChannelLayout0G12SampleFormat0gJ4Rate03srchI00mjK00mjL0yAA09AVChannelI0V_So08AVSampleK0VSiAlNSitKF":{"name":"setOptions(dstChannelLayout:dstSampleFormat:dstSampleRate:srcChannelLayout:srcSampleFormat:srcSampleRate:)","abstract":"<p>Set/reset common parameters.</p>","parent_name":"SwrContext"},"Classes/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC10initializeyyKF":{"name":"initialize()","abstract":"<p>Initialize context after user parameters have been set.</p>","parent_name":"SwrContext"},"Classes/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC5closeyyF":{"name":"close()","abstract":"<p>Closes the context so that <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC13isInitializedSbvp\">isInitialized</a></code> returns <code>false</code>.</p>","parent_name":"SwrContext"},"Classes/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC8getDelayySis5Int64VF":{"name":"getDelay(_:)","abstract":"<p>Gets the delay the next input sample will experience relative to the next output sample.</p>","parent_name":"SwrContext"},"Classes/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC13getOutSamplesySis5Int64VKF":{"name":"getOutSamples(_:)","abstract":"<p>Find an upper bound on the number of samples that the next <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC7convert3dst0F5Count3src0hG0SiSpySpys5UInt8VGSgG_SiSpySPyAJGSgGSitKF\">convert(dst:dstCount:src:srcCount:)</a></code>","parent_name":"SwrContext"},"Classes/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC7convert3dst0F5Count3src0hG0SiSpySpys5UInt8VGSgG_SiSpySPyAJGSgGSitKF":{"name":"convert(dst:dstCount:src:srcCount:)","abstract":"<p>Convert audio.</p>","parent_name":"SwrContext"},"Classes/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC5classAA7AVClassVvpZ":{"name":"class","abstract":"<p>Undocumented</p>","parent_name":"SwrContext"},"Classes/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC28withUnsafeClassObjectPointeryxxSvKXEKlF":{"name":"withUnsafeClassObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"SwrContext"},"Classes/SwrContext.html#/s:11SwiftFFmpeg10SwrContextC23withUnsafeObjectPointeryxxSvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"SwrContext"},"Classes/AVHash.html#/s:11SwiftFFmpeg6AVHashC12calculateMD53forSPys5UInt8VGSRyAGG_tFZ":{"name":"calculateMD5(for:)","abstract":"<p>Hash an array of data.</p>","parent_name":"AVHash"},"Classes/AVStream.html#/s:11SwiftFFmpeg8AVStreamC2ids5Int32Vvp":{"name":"id","abstract":"<p>Format-specific stream ID.</p>","parent_name":"AVStream"},"Classes/AVStream.html#/s:11SwiftFFmpeg8AVStreamC8timebaseSo10AVRationalVvp":{"name":"timebase","abstract":"<p>This is the fundamental unit of time (in seconds) in terms of which frame timestamps are represented.</p>","parent_name":"AVStream"},"Classes/AVStream.html#/s:11SwiftFFmpeg8AVStreamC9startTimes5Int64Vvp":{"name":"startTime","abstract":"<p>pts of the first frame of the stream in presentation order, in stream timebase.</p>","parent_name":"AVStream"},"Classes/AVStream.html#/s:11SwiftFFmpeg8AVStreamC8durations5Int64Vvp":{"name":"duration","abstract":"<p>Undocumented</p>","parent_name":"AVStream"},"Classes/AVStream.html#/s:11SwiftFFmpeg8AVStreamC10frameCountSivp":{"name":"frameCount","abstract":"<p>Number of frames in this stream if known or 0.</p>","parent_name":"AVStream"},"Classes/AVStream.html#/s:11SwiftFFmpeg8AVStreamC7discardSo9AVDiscardVvp":{"name":"discard","abstract":"<p>Selects which packets can be discarded at will and do not need to be demuxed.</p>","parent_name":"AVStream"},"Classes/AVStream.html#/s:11SwiftFFmpeg8AVStreamC17sampleAspectRatioSo10AVRationalVvp":{"name":"sampleAspectRatio","abstract":"<p>sample aspect ratio (0 if unknown)</p>","parent_name":"AVStream"},"Classes/AVStream.html#/s:11SwiftFFmpeg8AVStreamC8metadataSDyS2SGvp":{"name":"metadata","abstract":"<p>The metadata of the stream.</p>","parent_name":"AVStream"},"Classes/AVStream.html#/s:11SwiftFFmpeg8AVStreamC16averageFramerateSo10AVRationalVvp":{"name":"averageFramerate","abstract":"<p>Average framerate.</p>","parent_name":"AVStream"},"Classes/AVStream.html#/s:11SwiftFFmpeg8AVStreamC13realFramerateSo10AVRationalVvp":{"name":"realFramerate","abstract":"<p>Real base framerate of the stream.","parent_name":"AVStream"},"Classes/AVStream.html#/s:11SwiftFFmpeg8AVStreamC15codecParametersAA07AVCodecE0Cvp":{"name":"codecParameters","abstract":"<p>Codec parameters associated with this stream.</p>","parent_name":"AVStream"},"Classes/AVStream.html#/s:11SwiftFFmpeg8AVStreamC9mediaTypeSo07AVMediaE0Vvp":{"name":"mediaType","abstract":"<p>The media type of the stream.</p>","parent_name":"AVStream"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersCACycfc":{"name":"init()","abstract":"<p>Create a new <code>AVCodecParameters</code> and set its fields to default values (unknown/invalid/0).</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC9mediaTypeSo07AVMediaF0Vvp":{"name":"mediaType","abstract":"<p>General type of the encoded data.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC7codecIdSo0C2IDVvp":{"name":"codecId","abstract":"<p>Specific type of the encoded data (the codec used).</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC8codecTags6UInt32Vvp":{"name":"codecTag","abstract":"<p>Additional information about the codec (corresponds to the AVI FOURCC).</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC9extraDataSpys5UInt8VGSgvp":{"name":"extraData","abstract":"<p>Extra binary data needed for initializing the decoder, codec-dependent.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC13extraDataSizeSivp":{"name":"extraDataSize","abstract":"<p>The size of the extradata content in bytes.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC7bitRates5Int64Vvp":{"name":"bitRate","abstract":"<p>The average bitrate of the encoded data (in bits per second).</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC4copy4fromyAC_tF":{"name":"copy(from:)","abstract":"<p>Copy the contents from the supplied codec parameters.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC4copy4fromyAA0C7ContextC_tF":{"name":"copy(from:)","abstract":"<p>Fill the parameters struct based on the values from the supplied codec context.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC11pixelFormatSo07AVPixelF0Vvp":{"name":"pixelFormat","abstract":"<p>The pixel format of the video frame.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC5widthSivp":{"name":"width","abstract":"<p>The width of the video frame in pixels.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC6heightSivp":{"name":"height","abstract":"<p>The height of the video frame in pixels.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC17sampleAspectRatioSo10AVRationalVvp":{"name":"sampleAspectRatio","abstract":"<p>The aspect ratio (width / height) which a single pixel should have when displayed.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC10videoDelaySivp":{"name":"videoDelay","abstract":"<p>Number of delayed frames.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC12sampleFormatSo08AVSampleF0Vvp":{"name":"sampleFormat","abstract":"<p>The sample format of audio.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC13channelLayoutAA09AVChannelF0Vvp":{"name":"channelLayout","abstract":"<p>The channel layout bitmask. May be 0 if the channel layout is unknown or unspecified,","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC12channelCountSivp":{"name":"channelCount","abstract":"<p>The number of audio channels.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC10sampleRateSivp":{"name":"sampleRate","abstract":"<p>The number of audio samples per second.</p>","parent_name":"AVCodecParameters"},"Classes/AVCodecParameters.html#/s:11SwiftFFmpeg17AVCodecParametersC9frameSizeSivp":{"name":"frameSize","abstract":"<p>Audio frame size, if known. Required by some formats to be static.</p>","parent_name":"AVCodecParameters"},"Classes/AVSamples.html#/s:11SwiftFFmpeg9AVSamplesC4dataSrySpys5UInt8VGSgGvp":{"name":"data","abstract":"<p>Undocumented</p>","parent_name":"AVSamples"},"Classes/AVSamples.html#/s:11SwiftFFmpeg9AVSamplesC4sizeSivp":{"name":"size","abstract":"<p>Undocumented</p>","parent_name":"AVSamples"},"Classes/AVSamples.html#/s:11SwiftFFmpeg9AVSamplesC8linesizeSivp":{"name":"linesize","abstract":"<p>Undocumented</p>","parent_name":"AVSamples"},"Classes/AVSamples.html#/s:11SwiftFFmpeg9AVSamplesC12channelCountSivp":{"name":"channelCount","abstract":"<p>Undocumented</p>","parent_name":"AVSamples"},"Classes/AVSamples.html#/s:11SwiftFFmpeg9AVSamplesC11sampleCountSivp":{"name":"sampleCount","abstract":"<p>Undocumented</p>","parent_name":"AVSamples"},"Classes/AVSamples.html#/s:11SwiftFFmpeg9AVSamplesC12sampleFormatSo08AVSampleE0Vvp":{"name":"sampleFormat","abstract":"<p>Undocumented</p>","parent_name":"AVSamples"},"Classes/AVSamples.html#/s:11SwiftFFmpeg9AVSamplesC12channelCount06sampleE00F6Format5alignACSi_SiSo08AVSampleG0VSitcfc":{"name":"init(channelCount:sampleCount:sampleFormat:align:)","abstract":"<p>Create a samples buffer for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVSamples.html#/s:11SwiftFFmpeg9AVSamplesC11sampleCountSivp\">sampleCount</a></code> samples, and fill data pointers and linesize accordingly.</p>","parent_name":"AVSamples"},"Classes/AVSamples.html#/s:11SwiftFFmpeg9AVSamplesC10setSilenceyyF":{"name":"setSilence()","abstract":"<p>Fill an audio buffer with silence.</p>","parent_name":"AVSamples"},"Classes/AVSamples.html#/s:11SwiftFFmpeg9AVSamplesC8reformat5using2toSiAA10SwrContextC_ACtKF":{"name":"reformat(using:to:)","abstract":"<p>Reformat samples using the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SwrContext.html\">SwrContext</a></code>.</p>","parent_name":"AVSamples"},"Classes/AVSamples.html#/s:11SwiftFFmpeg9AVSamplesC13getBufferSize12channelCount06sampleH00I6Format5alignSi_SitSi_SiSo08AVSampleJ0VSitKFZ":{"name":"getBufferSize(channelCount:sampleCount:sampleFormat:align:)","abstract":"<p>Get the required buffer size for the given audio parameters.</p>","parent_name":"AVSamples"},"Classes/AVSamples.html#/s:11SwiftFFmpeg9AVSamplesC10fillArrays_6buffer12channelCount06sampleH00I6Format5alignSi_SitSpySpys5UInt8VGSgG_AMS2iSo08AVSampleJ0VSitKFZ":{"name":"fillArrays(_:buffer:channelCount:sampleCount:sampleFormat:align:)","abstract":"<p>Fill plane data pointers and linesize for samples with sample format.</p>","parent_name":"AVSamples"},"Classes/AVPacket/Flag.html#/s:11SwiftFFmpeg8AVPacketC4FlagV3keyAEvpZ":{"name":"key","abstract":"<p>The packet contains a keyframe.</p>","parent_name":"Flag"},"Classes/AVPacket/Flag.html#/s:11SwiftFFmpeg8AVPacketC4FlagV7corruptAEvpZ":{"name":"corrupt","abstract":"<p>The packet content is corrupted.</p>","parent_name":"Flag"},"Classes/AVPacket/Flag.html#/s:11SwiftFFmpeg8AVPacketC4FlagV7discardAEvpZ":{"name":"discard","abstract":"<p>Flag is used to discard packets which are required to maintain valid decoder state","parent_name":"Flag"},"Classes/AVPacket/Flag.html#/s:11SwiftFFmpeg8AVPacketC4FlagV7trustedAEvpZ":{"name":"trusted","abstract":"<p>The packet comes from a trusted source.</p>","parent_name":"Flag"},"Classes/AVPacket/Flag.html#/s:11SwiftFFmpeg8AVPacketC4FlagV10disposableAEvpZ":{"name":"disposable","abstract":"<p>Flag is used to indicate packets that contain frames that can be discarded by the decoder.","parent_name":"Flag"},"Classes/AVPacket/Flag.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Flag"},"Classes/AVPacket/Flag.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Flag"},"Classes/AVPacket/Flag.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Flag"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketCACycfc":{"name":"init()","abstract":"<p>Create an <code>AVPacket</code> and set its fields to default values.</p>","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC6bufferAA8AVBufferCSgvp":{"name":"buffer","abstract":"<p>A reference to the reference-counted buffer where the packet data is stored.","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC3ptss5Int64Vvp":{"name":"pts","abstract":"<p>Presentation timestamp in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVStream.html#/s:11SwiftFFmpeg8AVStreamC8timebaseSo10AVRationalVvp\">AVStream.timebase</a></code> units; the time at which the decompressed packet","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC3dtss5Int64Vvp":{"name":"dts","abstract":"<p>Decompression timestamp in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVStream.html#/s:11SwiftFFmpeg8AVStreamC8timebaseSo10AVRationalVvp\">AVStream.timebase</a></code> units; the time at which the packet is decompressed.</p>","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC4dataSpys5UInt8VGSgvp":{"name":"data","abstract":"<p>Undocumented</p>","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC4sizeSivp":{"name":"size","abstract":"<p>Undocumented</p>","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC11streamIndexSivp":{"name":"streamIndex","abstract":"<p>Undocumented</p>","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC5flagsAC4FlagVvp":{"name":"flags","abstract":"<p>Undocumented</p>","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC8durations5Int64Vvp":{"name":"duration","abstract":"<p>Duration of this packet in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVStream.html#/s:11SwiftFFmpeg8AVStreamC8timebaseSo10AVRationalVvp\">AVStream.timebase</a></code> units, 0 if unknown.","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC8positions5Int64Vvp":{"name":"position","abstract":"<p>Byte position in stream, -1 if unknown.</p>","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC16rescaleTimestamp4from2toySo10AVRationalV_AHtF":{"name":"rescaleTimestamp(from:to:)","abstract":"<p>Convert valid timing fields (timestamps / durations) in a packet from one timebase to another.","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC3ref4fromyAC_tKF":{"name":"ref(from:)","abstract":"<p>Setup a new reference to the data described by a given packet.</p>","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC5unrefyyF":{"name":"unref()","abstract":"<p>Wipe the packet.</p>","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC7moveRef4fromyAC_tF":{"name":"moveRef(from:)","abstract":"<p>Move every field in src to dst and reset src.</p>","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC5cloneACSgyF":{"name":"clone()","abstract":"<p>Create a new packet that references the same data as src.</p>","parent_name":"AVPacket"},"Classes/AVPacket.html#/s:11SwiftFFmpeg8AVPacketC12makeWritableyyKF":{"name":"makeWritable()","abstract":"<p>Create a writable reference for the data described by a given packet, avoiding data copy if possible.</p>","parent_name":"AVPacket"},"Classes/AVPacket/Flag.html":{"name":"Flag","abstract":"<p>Undocumented</p>","parent_name":"AVPacket"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC4dataSrySpys5UInt8VGSgGvp":{"name":"data","abstract":"<p>Undocumented</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC4sizeSivp":{"name":"size","abstract":"<p>Undocumented</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC9linesizesSrys5Int32VGvp":{"name":"linesizes","abstract":"<p>Undocumented</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC5widthSivp":{"name":"width","abstract":"<p>Undocumented</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC6heightSivp":{"name":"height","abstract":"<p>Undocumented</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC11pixelFormatSo07AVPixelE0Vvp":{"name":"pixelFormat","abstract":"<p>Undocumented</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC5width6height11pixelFormat5alignACSi_SiSo07AVPixelG0VSitcfc":{"name":"init(width:height:pixelFormat:align:)","abstract":"<p>Allocate an image with size and pixel format.</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC5frameAcA7AVFrameC_tcfc":{"name":"init(frame:)","abstract":"<p>Create an image from the given frame.</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC4copy4from9linesizesySpySPys5UInt8VGSgG_SPys5Int32VGtF":{"name":"copy(from:linesizes:)","abstract":"<p>Copy image from the given pixel buffer.</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC4copy4fromyAA7AVFrameC_tF":{"name":"copy(from:)","abstract":"<p>Copy image from the given frame.</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC8reformat5using2toSiAA10SwsContextC_ACtKF":{"name":"reformat(using:to:)","abstract":"<p>Reformat image using the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SwsContext.html\">SwsContext</a></code>.</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC11getLinesize11pixelFormat5width5planeSiSo07AVPixelG0V_S2itKFZ":{"name":"getLinesize(pixelFormat:width:plane:)","abstract":"<p>Compute the size of an image line with format and width for the plane.</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC13fillLinesizes_11pixelFormat5widthySpys5Int32VG_So07AVPixelG0VSitKFZ":{"name":"fillLinesizes(_:pixelFormat:width:)","abstract":"<p>Fill plane linesizes for an image with pixel format and width.</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC12fillPointers_11pixelFormat6height6buffer9linesizesSiSpySpys5UInt8VGSgG_So07AVPixelG0VSiALSPys5Int32VGSgtKFZ":{"name":"fillPointers(_:pixelFormat:height:buffer:linesizes:)","abstract":"<p>Fill plane data pointers for an image with pixel format and height.</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC13getBufferSize11pixelFormat5width6height5alignSiSo07AVPixelH0V_S3itKFZ":{"name":"getBufferSize(pixelFormat:width:height:align:)","abstract":"<p>Return the size in bytes of the amount of data required to store an image with the given parameters.</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC13copyImageData4from2to4size5alignSiAA7AVFrameC_Spys5UInt8VGS2itKFZ":{"name":"copyImageData(from:to:size:align:)","abstract":"<p>Copy image data from an frame into a buffer.</p>","parent_name":"AVImage"},"Classes/AVImage.html#/s:11SwiftFFmpeg7AVImageC15makePixelBuffer4from5alignSrys5UInt8VGAA7AVFrameC_SitKFZ":{"name":"makePixelBuffer(from:align:)","abstract":"<p>Create a pixel buffer and copy image data from an frame into the buffer.</p>","parent_name":"AVImage"},"Classes/AVIOContext/SeekWhence.html#/s:11SwiftFFmpeg11AVIOContextC10SeekWhenceV4sizeAEvpZ":{"name":"size","abstract":"<p>ORing this as the <q>whence</q> parameter to a seek function causes it to","parent_name":"SeekWhence"},"Classes/AVIOContext/SeekWhence.html#/s:11SwiftFFmpeg11AVIOContextC10SeekWhenceV5forceAEvpZ":{"name":"force","abstract":"<p>Passing this flag as the <q>whence</q> parameter to a seek function causes it to","parent_name":"SeekWhence"},"Classes/AVIOContext/SeekWhence.html#/s:11SwiftFFmpeg11AVIOContextC10SeekWhenceV8rawValues5Int32Vvp":{"name":"rawValue","abstract":"<p>Undocumented</p>","parent_name":"SeekWhence"},"Classes/AVIOContext/SeekWhence.html#/s:11SwiftFFmpeg11AVIOContextC10SeekWhenceV8rawValueAEs5Int32V_tcfc":{"name":"init(rawValue:)","abstract":"<p>Undocumented</p>","parent_name":"SeekWhence"},"Classes/AVIOContext/Flag.html#/s:11SwiftFFmpeg11AVIOContextC4FlagV4readAEvpZ":{"name":"read","abstract":"<p>read-only</p>","parent_name":"Flag"},"Classes/AVIOContext/Flag.html#/s:11SwiftFFmpeg11AVIOContextC4FlagV5writeAEvpZ":{"name":"write","abstract":"<p>write-only</p>","parent_name":"Flag"},"Classes/AVIOContext/Flag.html#/s:11SwiftFFmpeg11AVIOContextC4FlagV9readWriteAEvpZ":{"name":"readWrite","abstract":"<p>read-write pseudo flag</p>","parent_name":"Flag"},"Classes/AVIOContext/Flag.html#/s:11SwiftFFmpeg11AVIOContextC4FlagV8nonBlockAEvpZ":{"name":"nonBlock","abstract":"<p>Use non-blocking mode.</p>","parent_name":"Flag"},"Classes/AVIOContext/Flag.html#/s:11SwiftFFmpeg11AVIOContextC4FlagV6directAEvpZ":{"name":"direct","abstract":"<p>Use direct mode.</p>","parent_name":"Flag"},"Classes/AVIOContext/Flag.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Flag"},"Classes/AVIOContext/Flag.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Flag"},"Classes/AVIOContext/Flag.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Flag"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC6buffer4size8writable6opaque11readHandler05writeI004seekI0ACSpys5UInt8VG_SiSbSvSiSvSg_AMSgSitcSgAPs5Int64VAN_ARSitcSgtcfc":{"name":"init(buffer:size:writable:opaque:readHandler:writeHandler:seekHandler:)","abstract":"<p>Allocate and initialize an <code>AVIOContext</code> for buffered I/O.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC3url5flags17interruptCallback7optionsACSS_AC4FlagVSo15AVIOInterruptCBVSgSDyS2SGSgtKcfc":{"name":"init(url:flags:interruptCallback:options:)","abstract":"<p>Create and initialize a <code>AVIOContext</code> for accessing the resource indicated by url.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC5write_4sizeySPys5UInt8VG_SitF":{"name":"write(_:size:)","abstract":"<p>Writes the contents of a provided data buffer to the receiver.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC4seek2to6whenceSis5Int64V_AC10SeekWhenceVtKF":{"name":"seek(to:whence:)","abstract":"<p>Sets the file position indicator for the file stream to the value pointed to by offset.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC4skip2toSis5Int64V_tKF":{"name":"skip(to:)","abstract":"<p>Skip given number of bytes forward.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC4tellSiyKF":{"name":"tell()","abstract":"<p>Returns the file position indicator for the file stream.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC4sizes5Int64VyKF":{"name":"size()","abstract":"<p>Get the filesize.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC4feofSbyF":{"name":"feof()","abstract":"<p>Checks if the end of the given file stream has been reached.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC5flushyyF":{"name":"flush()","abstract":"<p>Force flushing of buffered data.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC4read_4sizeSiSpys5UInt8VG_SitKF":{"name":"read(_:size:)","abstract":"<p>Read size bytes from <code>AVIOContext</code> into buffer.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC11partialRead_4sizeSiSpys5UInt8VG_SitKF":{"name":"partialRead(_:size:)","abstract":"<p>Read size bytes from <code>AVIOContext</code> into buffer. Unlike <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC4read_4sizeSiSpys5UInt8VG_SitKF\">read(_:size:)</a></code>, this is allowed to","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC5pauseyyKF":{"name":"pause()","abstract":"<p>Pause playing.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC6resumeyyKF":{"name":"resume()","abstract":"<p>Resume playing.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC4seek2to11streamIndex5flagsSis5Int64V_AiA15AVFormatContextC8SeekFlagVtKF":{"name":"seek(to:streamIndex:flags:)","abstract":"<p>Seek to a given timestamp relative to some component stream.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC6acceptACyKF":{"name":"accept()","abstract":"<p>Accept and allocate a client context on a server context.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC9handshakeSbyKF":{"name":"handshake()","abstract":"<p>Perform one step of the protocol handshake to accept a new client.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC5closeyyF":{"name":"close()","abstract":"<p>Close the resource accessed by the <code>AVIOContext</code>.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC12protocolName3forSSSgSS_tFZ":{"name":"protocolName(for:)","abstract":"<p>Return the name of the protocol that will handle the passed url.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC23supportedInputProtocolsSaySSGvpZ":{"name":"supportedInputProtocols","abstract":"<p>Returns an array of the input protocols supported by the <code>AVIOContext</code>.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC24supportedOutputProtocolsSaySSGvpZ":{"name":"supportedOutputProtocols","abstract":"<p>Returns an array of the output protocols supported by the <code>AVIOContext</code>.</p>","parent_name":"AVIOContext"},"Classes/AVIOContext.html#/s:11SwiftFFmpeg11AVIOContextC23withUnsafeObjectPointeryxxSvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVIOContext"},"Classes/AVIOContext/Flag.html":{"name":"Flag","abstract":"<p>URL open modes</p>","parent_name":"AVIOContext"},"Classes/AVIOContext/SeekWhence.html":{"name":"SeekWhence","abstract":"<p>Undocumented</p>","parent_name":"AVIOContext"},"Classes/AVIODirContext/Iterator.html#/s:St4next7ElementQzSgyF":{"name":"next()","parent_name":"Iterator"},"Classes/AVIODirContext.html#/s:11SwiftFFmpeg14AVIODirContextC3url7optionsACSS_SDyS2SGSgtKcfc":{"name":"init(url:options:)","abstract":"<p>Open directory for reading.</p>","parent_name":"AVIODirContext"},"Classes/AVIODirContext.html#/s:11SwiftFFmpeg14AVIODirContextC5closeyyF":{"name":"close()","abstract":"<p>Close directory.</p>","parent_name":"AVIODirContext"},"Classes/AVIODirContext/Iterator.html":{"name":"Iterator","parent_name":"AVIODirContext"},"Classes/AVIODirContext.html#/s:ST12makeIterator0B0QzyF":{"name":"makeIterator()","parent_name":"AVIODirContext"},"Classes/AVIODirEntry.html#/s:11SwiftFFmpeg12AVIODirEntryC4nameSSvp":{"name":"name","abstract":"<p>Filename.</p>","parent_name":"AVIODirEntry"},"Classes/AVIODirEntry.html#/s:11SwiftFFmpeg12AVIODirEntryC4typeSo0cD4TypeVvp":{"name":"type","abstract":"<p>Type of the entry</p>","parent_name":"AVIODirEntry"},"Classes/AVIODirEntry.html#/s:11SwiftFFmpeg12AVIODirEntryC4sizes5Int64Vvp":{"name":"size","abstract":"<p>File size in bytes, -1 if unknown.</p>","parent_name":"AVIODirEntry"},"Classes/AVIODirEntry.html#/s:11SwiftFFmpeg12AVIODirEntryC21modificationTimestamps5Int64Vvp":{"name":"modificationTimestamp","abstract":"<p>Time of last modification in microseconds since unix epoch, -1 if unknown.</p>","parent_name":"AVIODirEntry"},"Classes/AVIODirEntry.html#/s:11SwiftFFmpeg12AVIODirEntryC15accessTimestamps5Int64Vvp":{"name":"accessTimestamp","abstract":"<p>Time of last access in microseconds since unix epoch, -1 if unknown.</p>","parent_name":"AVIODirEntry"},"Classes/AVIODirEntry.html#/s:11SwiftFFmpeg12AVIODirEntryC21statusChangeTimestamps5Int64Vvp":{"name":"statusChangeTimestamp","abstract":"<p>Time of last status change in microseconds since unix epoch, -1 if unknown.</p>","parent_name":"AVIODirEntry"},"Classes/AVIODirEntry.html#/s:11SwiftFFmpeg12AVIODirEntryC6userIds5Int64Vvp":{"name":"userId","abstract":"<p>User ID of owner, -1 if unknown.</p>","parent_name":"AVIODirEntry"},"Classes/AVIODirEntry.html#/s:11SwiftFFmpeg12AVIODirEntryC7groupIds5Int64Vvp":{"name":"groupId","abstract":"<p>Group ID of owner, -1 if unknown.</p>","parent_name":"AVIODirEntry"},"Classes/AVIODirEntry.html#/s:11SwiftFFmpeg12AVIODirEntryC8filemodes5Int64Vvp":{"name":"filemode","abstract":"<p>Unix file mode, -1 if unknown.</p>","parent_name":"AVIODirEntry"},"Classes/AVHWFramesContext.html#/s:11SwiftFFmpeg17AVHWFramesContextC06deviceD0AcA010AVHWDeviceD0C_tcfc":{"name":"init(deviceContext:)","abstract":"<p>Create an <code>AVHWFramesContext</code> tied to a given device context.</p>","parent_name":"AVHWFramesContext"},"Classes/AVHWFramesContext.html#/s:11SwiftFFmpeg17AVHWFramesContextC06deviceD0AA010AVHWDeviceD0Cvp":{"name":"deviceContext","abstract":"<p>A reference to the parent <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVHWDeviceContext.html\">AVHWDeviceContext</a></code>.</p>","parent_name":"AVHWFramesContext"},"Classes/AVHWFramesContext.html#/s:11SwiftFFmpeg17AVHWFramesContextC11pixelFormatSo07AVPixelF0Vvp":{"name":"pixelFormat","abstract":"<p>The pixel format identifying the underlying HW surface type.","parent_name":"AVHWFramesContext"},"Classes/AVHWFramesContext.html#/s:11SwiftFFmpeg17AVHWFramesContextC13swPixelFormatSo07AVPixelG0Vvp":{"name":"swPixelFormat","abstract":"<p>The pixel format identifying the actual data layout of the hardware","parent_name":"AVHWFramesContext"},"Classes/AVHWFramesContext.html#/s:11SwiftFFmpeg17AVHWFramesContextC5widthSivp":{"name":"width","abstract":"<p>The width of the frames in this pool.</p>","parent_name":"AVHWFramesContext"},"Classes/AVHWFramesContext.html#/s:11SwiftFFmpeg17AVHWFramesContextC6heightSivp":{"name":"height","abstract":"<p>The height of the frames in this pool.</p>","parent_name":"AVHWFramesContext"},"Classes/AVHWFramesContext.html#/s:11SwiftFFmpeg17AVHWFramesContextC15initialPoolSizeSivp":{"name":"initialPoolSize","abstract":"<p>Initial size of the frame pool. If a device type does not support","parent_name":"AVHWFramesContext"},"Classes/AVHWFramesContext.html#/s:11SwiftFFmpeg17AVHWFramesContextC10initializeyyKF":{"name":"initialize()","abstract":"<p>Finalize the context before use. This function must be called after the","parent_name":"AVHWFramesContext"},"Classes/AVHWFramesContext.html#/s:11SwiftFFmpeg17AVHWFramesContextC11allocBuffer5frameyAA7AVFrameC_tKF":{"name":"allocBuffer(frame:)","abstract":"<p>Allocate a new frame attached to the given <code>AVHWFramesContext</code>.</p>","parent_name":"AVHWFramesContext"},"Classes/AVHWFramesContext.html#/s:11SwiftFFmpeg17AVHWFramesContextC15getPixelFormatsySaySo13AVPixelFormatVGSgSo26AVHWFrameTransferDirectionVF":{"name":"getPixelFormats(_:)","abstract":"<p>Get a list of possible source or target formats usable in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC12transferData4fromyAC_tKF\">AVFrame.transferData(from:)</a></code>.</p>","parent_name":"AVHWFramesContext"},"Classes/AVHWDeviceContext.html#/s:11SwiftFFmpeg17AVHWDeviceContextC10deviceType0E07optionsACSo0cF0V_SSSgSDyS2SGSgtKcfc":{"name":"init(deviceType:device:options:)","abstract":"<p>Open a device of the specified type and create an <code>AVHWDeviceContext</code> for it.</p>","parent_name":"AVHWDeviceContext"},"Classes/AVHWDeviceContext.html#/s:11SwiftFFmpeg17AVHWDeviceContextC10deviceType0eD0ACSo0cF0V_ACtKcfc":{"name":"init(deviceType:deviceContext:)","abstract":"<p>Create a new device of the specified type from an existing device.</p>","parent_name":"AVHWDeviceContext"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameCACycfc":{"name":"init()","abstract":"<p>Creates an <code>AVFrame</code> and set its fields to default values.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC4dataSrySpys5UInt8VGSgGvp":{"name":"data","abstract":"<p>Pointer to the picture/channel planes.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC8linesizeSrys5Int32VGvp":{"name":"linesize","abstract":"<p>For video, size in bytes of each picture line.","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC12extendedDataSrySpys5UInt8VGSgGvp":{"name":"extendedData","abstract":"<p>pointers to the data planes/channels.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC3ptss5Int64Vvp":{"name":"pts","abstract":"<p>Presentation timestamp in timebase units (time when frame should be shown to user).</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC3dtss5Int64Vvp":{"name":"dts","abstract":"<p>DTS copied from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVPacket.html\">AVPacket</a></code> that triggered returning this frame. (if frame threading isn&rsquo;t used)","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC18codedPictureNumberSivp":{"name":"codedPictureNumber","abstract":"<p>Picture number in bitstream order.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC20displayPictureNumberSivp":{"name":"displayPictureNumber","abstract":"<p>Picture number in display order.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC6bufferSayAA8AVBufferCSgGvp":{"name":"buffer","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVBuffer.html\">AVBuffer</a></code> references backing the data for this frame.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC14extendedBufferSayAA8AVBufferCGvp":{"name":"extendedBuffer","abstract":"<p>For planar audio which requires more than <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/AVConstant.html#/s:11SwiftFFmpeg10AVConstantO18dataPointersNumberSivpZ\">AVConstant.dataPointersNumber</a></code> <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVBuffer.html\">AVBuffer</a></code>,","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC19extendedBufferCountSivp":{"name":"extendedBufferCount","abstract":"<p>The number of elements in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC14extendedBufferSayAA8AVBufferCGvp\">extendedBuffer</a></code>.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC19bestEffortTimestamps5Int64Vvp":{"name":"bestEffortTimestamp","abstract":"<p>The frame timestamp estimated using various heuristics, in stream timebase.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC11pktPositions5Int64Vvp":{"name":"pktPosition","abstract":"<p>Reordered pos from the last <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVPacket.html\">AVPacket</a></code> that has been input into the decoder.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC11pktDurations5Int64Vvp":{"name":"pktDuration","abstract":"<p>Duration of the corresponding packet, expressed in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVStream.html#/s:11SwiftFFmpeg8AVStreamC8timebaseSo10AVRationalVvp\">AVStream.timebase</a></code> units, 0 if unknown.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC7pktSizeSivp":{"name":"pktSize","abstract":"<p>Size of the corresponding packet containing the compressed frame.","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC8metadataSDyS2SGvp":{"name":"metadata","abstract":"<p>The metadata of the frame.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC10isWritableSbvp":{"name":"isWritable","abstract":"<p>A Boolean value indicating whether the frame data is writable.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC11allocBuffer5alignySi_tKF":{"name":"allocBuffer(align:)","abstract":"<p>Allocate new buffer(s) for audio or video data.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC3ref4fromyAC_tKF":{"name":"ref(from:)","abstract":"<p>Set up a new reference to the data described by the source frame.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC5unrefyyF":{"name":"unref()","abstract":"<p>Unreference all the buffers referenced by frame and reset the frame fields.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC7moveRef4fromyAC_tF":{"name":"moveRef(from:)","abstract":"<p>Move everything contained in src to dst and reset src.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC5cloneACSgyF":{"name":"clone()","abstract":"<p>Create a new frame that references the same data as src.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC12makeWritableyyKF":{"name":"makeWritable()","abstract":"<p>Ensure that the frame data is writable, avoiding data copy if possible.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC4copy4fromyAC_tKF":{"name":"copy(from:)","abstract":"<p>Copy the frame data from src to dst.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC14copyProperties4fromyAC_tKF":{"name":"copyProperties(from:)","abstract":"<p>Copy only <q>metadata</q> fields from src to dst.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC11planeBuffer2atAA8AVBufferCSgSi_tF":{"name":"planeBuffer(at:)","abstract":"<p>Get the buffer reference a given data plane is stored in.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC11pixelFormatSo07AVPixelE0Vvp":{"name":"pixelFormat","abstract":"<p>The pixel format of the picture.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC5widthSivp":{"name":"width","abstract":"<p>The width of the picture, in pixels.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC6heightSivp":{"name":"height","abstract":"<p>The height of the picture, in pixels.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC10isKeyFrameSbvp":{"name":"isKeyFrame","abstract":"<p>A Boolean value indicating whether this frame is key frame.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC17isInterlacedFrameSbvp":{"name":"isInterlacedFrame","abstract":"<p>A Boolean value indicating whether this frame is interlaced or progressive frame.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC11pictureTypeSo09AVPictureE0Vvp":{"name":"pictureType","abstract":"<p>The picture type of the frame.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC17sampleAspectRatioSo10AVRationalVvp":{"name":"sampleAspectRatio","abstract":"<p>The sample aspect ratio for the video frame, 0/1 if unknown/unspecified.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC13repeatPictureSivp":{"name":"repeatPicture","abstract":"<p>When decoding, this signals how much the picture must be delayed.","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC12sampleFormatSo08AVSampleE0Vvp":{"name":"sampleFormat","abstract":"<p>The sample format of the audio data.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC10sampleRateSivp":{"name":"sampleRate","abstract":"<p>The sample rate of the audio data.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC13channelLayoutAA09AVChannelE0Vvp":{"name":"channelLayout","abstract":"<p>The channel layout of the audio data.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC11sampleCountSivp":{"name":"sampleCount","abstract":"<p>The number of audio samples (per channel) described by this frame.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC12channelCountSivp":{"name":"channelCount","abstract":"<p>The number of audio channels.</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC5classAA7AVClassVvpZ":{"name":"class","abstract":"<p>Undocumented</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC28withUnsafeClassObjectPointeryxxSvKXEKlF":{"name":"withUnsafeClassObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC15hwFramesContextAA010AVHWFramesF0CSgvp":{"name":"hwFramesContext","abstract":"<p>For hwaccel-format frames, this should be a reference to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVHWFramesContext.html\">AVHWFramesContext</a></code>","parent_name":"AVFrame"},"Classes/AVFrame.html#/s:11SwiftFFmpeg7AVFrameC12transferData4fromyAC_tKF":{"name":"transferData(from:)","abstract":"<p>Copy data to or from a hw surface. At least one of <code>dst/src</code> must have an","parent_name":"AVFrame"},"Classes/AVFilterInOut.html#/s:11SwiftFFmpeg13AVFilterInOutCACycfc":{"name":"init()","abstract":"<p>Create a single <code>AVFilterInOut</code> entry.</p>","parent_name":"AVFilterInOut"},"Classes/AVFilterInOut.html#/s:11SwiftFFmpeg13AVFilterInOutC4nameSSvp":{"name":"name","abstract":"<p>The unique name for this input/output in the list.</p>","parent_name":"AVFilterInOut"},"Classes/AVFilterInOut.html#/s:11SwiftFFmpeg13AVFilterInOutC13filterContextAA0cG0Cvp":{"name":"filterContext","abstract":"<p>The filter context associated to this input/output.</p>","parent_name":"AVFilterInOut"},"Classes/AVFilterInOut.html#/s:11SwiftFFmpeg13AVFilterInOutC8padIndexSivp":{"name":"padIndex","abstract":"<p>The index of the filter context pad to use for linking.</p>","parent_name":"AVFilterInOut"},"Classes/AVFilterInOut.html#/s:11SwiftFFmpeg13AVFilterInOutC4nextACSgvp":{"name":"next","abstract":"<p>The next input/input in the list, <code>nil</code> if this is the last.</p>","parent_name":"AVFilterInOut"},"Classes/AVFilterGraph.html#/s:11SwiftFFmpeg13AVFilterGraphCACycfc":{"name":"init()","abstract":"<p>Create a filter graph.</p>","parent_name":"AVFilterGraph"},"Classes/AVFilterGraph.html#/s:11SwiftFFmpeg13AVFilterGraphC7filtersSayAA0C7ContextCGvp":{"name":"filters","abstract":"<p>The filter list in the graph.</p>","parent_name":"AVFilterGraph"},"Classes/AVFilterGraph.html#/s:11SwiftFFmpeg13AVFilterGraphC11filterCountSivp":{"name":"filterCount","abstract":"<p>The number of filters in the graph.</p>","parent_name":"AVFilterGraph"},"Classes/AVFilterGraph.html#/s:11SwiftFFmpeg13AVFilterGraphC9addFilter_4name4argsAA0C7ContextCAA0C0V_S2SSgtKF":{"name":"addFilter(_:name:args:)","abstract":"<p>Create and add a filter instance into an existing graph.","parent_name":"AVFilterGraph"},"Classes/AVFilterGraph.html#/s:11SwiftFFmpeg13AVFilterGraphC5parse7filters6inputs7outputsySS_AA0C5InOutCAItKF":{"name":"parse(filters:inputs:outputs:)","abstract":"<p>Add a graph described by a string to a graph.</p>","parent_name":"AVFilterGraph"},"Classes/AVFilterGraph.html#/s:11SwiftFFmpeg13AVFilterGraphC9configureyyKF":{"name":"configure()","abstract":"<p>Check validity and configure all the links and formats in the graph.</p>","parent_name":"AVFilterGraph"},"Classes/AVFilterGraph.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AVFilterGraph"},"Classes/AVFilterGraph.html#/s:11SwiftFFmpeg13AVFilterGraphC23withUnsafeObjectPointeryxxSvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVFilterGraph"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC5graph6filter4nameAcA0C5GraphC_AA0C0VSSSgtcfc":{"name":"init(graph:filter:name:)","abstract":"<p>Create a new filter instance in a filter graph.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC6filterAA0C0Vvp":{"name":"filter","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVFilter.html\">AVFilter</a></code> of which this is an instance.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC4nameSSvp":{"name":"name","abstract":"<p>The name of this filter instance.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC6inputsSayAA0C4LinkVGvp":{"name":"inputs","abstract":"<p>The input links of this filter instance.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC10inputCountSivp":{"name":"inputCount","abstract":"<p>The number of input pads.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC7outputsSayAA0C4LinkVGvp":{"name":"outputs","abstract":"<p>The output links of this filter instance.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC11outputCountSivp":{"name":"outputCount","abstract":"<p>The number of input pads.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC5graphAA0C5GraphCvp":{"name":"graph","abstract":"<p>The filtergraph this filter belongs to.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC10initialize4argsySSSg_tKF":{"name":"initialize(args:)","abstract":"<p>Initialize a filter with the supplied parameters.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC10initialize4argsySDyS2SG_tKF":{"name":"initialize(args:)","abstract":"<p>Initialize a filter with the supplied dictionary of options.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC4link6srcPad3dst0hG0ACSu_ACSutKF":{"name":"link(srcPad:dst:dstPad:)","abstract":"<p>Link two filters together.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC5classAA7AVClassVvpZ":{"name":"class","abstract":"<p>Undocumented</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC28withUnsafeClassObjectPointeryxxSvKXEKlF":{"name":"withUnsafeClassObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC23withUnsafeObjectPointeryxxSvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC8addFrame_5flagsyAA7AVFrameCSg_AA18AVBufferSourceFlagVtKF":{"name":"addFrame(_:flags:)","abstract":"<p>Add a frame to the buffer source.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC9mediaTypeSo07AVMediaF0Vvp":{"name":"mediaType","abstract":"<p>The media type of the buffer sink.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC8timebaseSo10AVRationalVvp":{"name":"timebase","abstract":"<p>The timebase of the buffer sink.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC11pixelFormatSo07AVPixelF0Vvp":{"name":"pixelFormat","abstract":"<p>The pixel format of the video buffer sink.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC9frameRateSo10AVRationalVvp":{"name":"frameRate","abstract":"<p>The frame rate of the video buffer sink.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC5widthSivp":{"name":"width","abstract":"<p>The width of the video buffer sink.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC6heightSivp":{"name":"height","abstract":"<p>The height of the video buffer sink.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC17sampleAspectRatioSo10AVRationalVvp":{"name":"sampleAspectRatio","abstract":"<p>The sample aspect ratio of the video buffer sink.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC12sampleFormatSo08AVSampleF0Vvp":{"name":"sampleFormat","abstract":"<p>The sample format of the audio buffer sink.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC10sampleRateSivp":{"name":"sampleRate","abstract":"<p>The sample rate of the audio buffer sink.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC12channelCountSivp":{"name":"channelCount","abstract":"<p>The number of channels in the audio buffer sink.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC13channelLayoutAA09AVChannelF0Vvp":{"name":"channelLayout","abstract":"<p>The channel layout of the audio buffer sink.</p>","parent_name":"AVFilterContext"},"Classes/AVFilterContext.html#/s:11SwiftFFmpeg15AVFilterContextC8getFrame_5flagsyAA7AVFrameC_AA16AVBufferSinkFlagVtKF":{"name":"getFrame(_:flags:)","abstract":"<p>Get a frame with filtered data from sink and put it in frame.</p>","parent_name":"AVFilterContext"},"Classes/AVDeviceInfoList.html#/s:11SwiftFFmpeg16AVDeviceInfoListC13formatContextAcA08AVFormatG0C_tKcfc":{"name":"init(formatContext:)","abstract":"<p>List devices.</p>","parent_name":"AVDeviceInfoList"},"Classes/AVDeviceInfoList.html#/s:11SwiftFFmpeg16AVDeviceInfoListC7devicesSayAA0cD0VGvp":{"name":"devices","abstract":"<p>list of autodetected devices</p>","parent_name":"AVDeviceInfoList"},"Classes/AVDeviceInfoList.html#/s:11SwiftFFmpeg16AVDeviceInfoListC11deviceCountSivp":{"name":"deviceCount","abstract":"<p>number of autodetected devices</p>","parent_name":"AVDeviceInfoList"},"Classes/AVDeviceInfoList.html#/s:11SwiftFFmpeg16AVDeviceInfoListC18defaultDeviceIndexSivp":{"name":"defaultDeviceIndex","abstract":"<p>index of default device or -1 if no default</p>","parent_name":"AVDeviceInfoList"},"Classes/AVDeviceInfoList.html#/s:11SwiftFFmpeg16AVDeviceInfoListC16listInputSources6device0I4Name7optionsAcA13AVInputFormatVSg_SSSgSDyS2SGSgtKFZ":{"name":"listInputSources(device:deviceName:options:)","abstract":"<p>List devices.</p>","parent_name":"AVDeviceInfoList"},"Classes/AVDeviceInfoList.html#/s:11SwiftFFmpeg16AVDeviceInfoListC14listInputSinks6device0I4Name7optionsAcA14AVOutputFormatVSg_SSSgSDyS2SGSgtKFZ":{"name":"listInputSinks(device:deviceName:options:)","abstract":"<p>Undocumented</p>","parent_name":"AVDeviceInfoList"},"Classes/AVDeviceCapabilitiesQuery.html#/s:11SwiftFFmpeg25AVDeviceCapabilitiesQueryC13formatContext7optionsAcA08AVFormatG0C_SDyS2SGSgtKcfc":{"name":"init(formatContext:options:)","abstract":"<p>Initialize capabilities probing API based on <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AVOption.html\">AVOption</a></code> API.</p>","parent_name":"AVDeviceCapabilitiesQuery"},"Classes/AVDeviceCapabilitiesQuery.html#/s:11SwiftFFmpeg25AVDeviceCapabilitiesQueryC5codecSo9AVCodecIDVvp":{"name":"codec","abstract":"<p>Undocumented</p>","parent_name":"AVDeviceCapabilitiesQuery"},"Classes/AVDeviceCapabilitiesQuery.html#/s:11SwiftFFmpeg25AVDeviceCapabilitiesQueryC12sampleFormatSo9AVCodecIDVvp":{"name":"sampleFormat","abstract":"<p>Undocumented</p>","parent_name":"AVDeviceCapabilitiesQuery"},"Classes/AVDeviceCapabilitiesQuery.html#/s:11SwiftFFmpeg25AVDeviceCapabilitiesQueryC10sampleRateSivp":{"name":"sampleRate","abstract":"<p>Undocumented</p>","parent_name":"AVDeviceCapabilitiesQuery"},"Classes/AVDeviceCapabilitiesQuery.html#/s:11SwiftFFmpeg25AVDeviceCapabilitiesQueryC12channelCountSivp":{"name":"channelCount","abstract":"<p>Undocumented</p>","parent_name":"AVDeviceCapabilitiesQuery"},"Classes/AVDeviceCapabilitiesQuery.html#/s:11SwiftFFmpeg25AVDeviceCapabilitiesQueryC13channelLayoutAA09AVChannelG0Vvp":{"name":"channelLayout","abstract":"<p>Undocumented</p>","parent_name":"AVDeviceCapabilitiesQuery"},"Classes/AVDeviceCapabilitiesQuery.html#/s:11SwiftFFmpeg25AVDeviceCapabilitiesQueryC11pixelFormatSo9AVCodecIDVvp":{"name":"pixelFormat","abstract":"<p>Undocumented</p>","parent_name":"AVDeviceCapabilitiesQuery"},"Classes/AVDeviceCapabilitiesQuery.html#/s:11SwiftFFmpeg25AVDeviceCapabilitiesQueryC11windowWidthSivp":{"name":"windowWidth","abstract":"<p>Undocumented</p>","parent_name":"AVDeviceCapabilitiesQuery"},"Classes/AVDeviceCapabilitiesQuery.html#/s:11SwiftFFmpeg25AVDeviceCapabilitiesQueryC12windowHeightSivp":{"name":"windowHeight","abstract":"<p>Undocumented</p>","parent_name":"AVDeviceCapabilitiesQuery"},"Classes/AVDeviceCapabilitiesQuery.html#/s:11SwiftFFmpeg25AVDeviceCapabilitiesQueryC10frameWidthSivp":{"name":"frameWidth","abstract":"<p>Undocumented</p>","parent_name":"AVDeviceCapabilitiesQuery"},"Classes/AVDeviceCapabilitiesQuery.html#/s:11SwiftFFmpeg25AVDeviceCapabilitiesQueryC11frameHeightSivp":{"name":"frameHeight","abstract":"<p>Undocumented</p>","parent_name":"AVDeviceCapabilitiesQuery"},"Classes/AVDeviceCapabilitiesQuery.html#/s:11SwiftFFmpeg25AVDeviceCapabilitiesQueryC3fpsSo10AVRationalVvp":{"name":"fps","abstract":"<p>Undocumented</p>","parent_name":"AVDeviceCapabilitiesQuery"},"Classes/AVFormatContext/SeekFlag.html#/s:11SwiftFFmpeg15AVFormatContextC8SeekFlagV8backwardAEvpZ":{"name":"backward","abstract":"<p>seek backward</p>","parent_name":"SeekFlag"},"Classes/AVFormatContext/SeekFlag.html#/s:11SwiftFFmpeg15AVFormatContextC8SeekFlagV4byteAEvpZ":{"name":"byte","abstract":"<p>seeking based on position in bytes</p>","parent_name":"SeekFlag"},"Classes/AVFormatContext/SeekFlag.html#/s:11SwiftFFmpeg15AVFormatContextC8SeekFlagV3anyAEvpZ":{"name":"any","abstract":"<p>seek to any frame, even non-keyframes</p>","parent_name":"SeekFlag"},"Classes/AVFormatContext/SeekFlag.html#/s:11SwiftFFmpeg15AVFormatContextC8SeekFlagV5frameAEvpZ":{"name":"frame","abstract":"<p>seeking based on frame number</p>","parent_name":"SeekFlag"},"Classes/AVFormatContext/SeekFlag.html#/s:11SwiftFFmpeg15AVFormatContextC8SeekFlagV8rawValues5Int32Vvp":{"name":"rawValue","abstract":"<p>Undocumented</p>","parent_name":"SeekFlag"},"Classes/AVFormatContext/SeekFlag.html#/s:11SwiftFFmpeg15AVFormatContextC8SeekFlagV8rawValueAEs5Int32V_tcfc":{"name":"init(rawValue:)","abstract":"<p>Undocumented</p>","parent_name":"SeekFlag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV6genPTSAEvpZ":{"name":"genPTS","abstract":"<p>Generate missing pts even if it requires parsing future frames.</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV6ignIdxAEvpZ":{"name":"ignIdx","abstract":"<p>Ignore index.</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV8nonBlockAEvpZ":{"name":"nonBlock","abstract":"<p>Do not block when reading packets from input.</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV6ignDTSAEvpZ":{"name":"ignDTS","abstract":"<p>Ignore DTS on frames that contain both DTS &amp; PTS.</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV8noFillInAEvpZ":{"name":"noFillIn","abstract":"<p>Do not infer any values from other values, just return what is stored in the container.</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV7noParseAEvpZ":{"name":"noParse","abstract":"<p>Do not use AVParsers, you also must set AVFMT_FLAG_NOFILLIN as the fillin code works on frames and","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV8noBufferAEvpZ":{"name":"noBuffer","abstract":"<p>Do not buffer frames when possible.</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV8customIOAEvpZ":{"name":"customIO","abstract":"<p>The caller has supplied a custom AVIOContext, don&rsquo;t avio_close() it.</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV14discardCorruptAEvpZ":{"name":"discardCorrupt","abstract":"<p>Discard frames marked corrupted.</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV12flushPacketsAEvpZ":{"name":"flushPackets","abstract":"<p>Flush the AVIOContext every packet.</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV8bitexactAEvpZ":{"name":"bitexact","abstract":"<p>When muxing, try to avoid writing any random/volatile data to the output.","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV7sortDTSAEvpZ":{"name":"sortDTS","abstract":"<p>Try to interleave outputted packets by dts (using this flag can slow demuxing down).</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV7privOptAEvpZ":{"name":"privOpt","abstract":"<p>Enable use of private Flag by delaying codec open (this could be made default once all code is converted).</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV8fastSeekAEvpZ":{"name":"fastSeek","abstract":"<p>Enable fast, but inaccurate seeks for some formats.</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV8shortestAEvpZ":{"name":"shortest","abstract":"<p>Stop muxing when the shortest stream stops.</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:11SwiftFFmpeg15AVFormatContextC4FlagV7autoBSFAEvpZ":{"name":"autoBSF","abstract":"<p>Add bitstream filters as requested by the muxer.</p>","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Flag"},"Classes/AVFormatContext/Flag.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Flag"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextCACycfc":{"name":"init()","abstract":"<p>Create an <code>AVFormatContext</code>.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC3urlSSSgvp":{"name":"url","abstract":"<p>Input or output URL.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC2pbAA11AVIOContextCSgvp":{"name":"pb","abstract":"<p>I/O context.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC11streamCountSivp":{"name":"streamCount","abstract":"<p>The number of streams in the file.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC7streamsSayAA8AVStreamCGvp":{"name":"streams","abstract":"<p>A list of all streams in the file. New streams are created with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC9addStream5codecAA8AVStreamCSgAA7AVCodecVSg_tF\">addStream(codec:)</a></code>.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC11videoStreamAA8AVStreamCSgvp":{"name":"videoStream","abstract":"<p>The first video stream in the file.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC11audioStreamAA8AVStreamCSgvp":{"name":"audioStream","abstract":"<p>The first audio stream in the file.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC14subtitleStreamAA8AVStreamCSgvp":{"name":"subtitleStream","abstract":"<p>The first subtitle stream in the file.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC5flagsAC4FlagVvp":{"name":"flags","abstract":"<p>The flags used to modify the (de)muxer behaviour.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC8metadataSDyS2SGvp":{"name":"metadata","abstract":"<p>Metadata that applies to the whole file.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC17interruptCallbackSo15AVIOInterruptCBVvp":{"name":"interruptCallback","abstract":"<p>Custom interrupt callbacks for the I/O layer.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC11streamIndex3forSiSgSo11AVMediaTypeV_tF":{"name":"streamIndex(for:)","abstract":"<p>The first stream index for the specified media type.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC10dumpFormat3url8isOutputySSSg_SbtF":{"name":"dumpFormat(url:isOutput:)","abstract":"<p>Print detailed information about the input or output format, such as duration, bitrate, streams,","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC19sendMessageToDevice4type4dataySo05AVAppg3DevF4TypeV_SwSgtKF":{"name":"sendMessageToDevice(type:data:)","abstract":"<p>Send control message from application to device.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC24sendMessageToApplication4type4dataySo05AVDevg3AppF4TypeV_SwSgtKF":{"name":"sendMessageToApplication(type:data:)","abstract":"<p>Send control message from device to application.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext/Flag.html":{"name":"Flag","abstract":"<p>Flags used to modify the (de)muxer behaviour.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC3url6format7optionsACSS_AA13AVInputFormatVSgSDyS2SGSgtKcfc":{"name":"init(url:format:options:)","abstract":"<p>Open an input stream and read the header. The codecs are not opened.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC11inputFormatAA07AVInputF0VSgvp":{"name":"inputFormat","abstract":"<p>The input container format.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC9startTimes5Int64Vvp":{"name":"startTime","abstract":"<p>Position of the first frame of the component, in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/AVTimestamp.html#/s:11SwiftFFmpeg11AVTimestampO8timebases5Int32VvpZ\">AVTimestamp.timebase</a></code> fractional seconds.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC8durations5Int64Vvp":{"name":"duration","abstract":"<p>Duration of the stream, in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/AVTimestamp.html#/s:11SwiftFFmpeg11AVTimestampO8timebases5Int32VvpZ\">AVTimestamp.timebase</a></code> fractional seconds.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC7bitRates5Int64Vvp":{"name":"bitRate","abstract":"<p>Total stream bitrate in bit/s, 0 if not available.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC4sizes5Int64Vvp":{"name":"size","abstract":"<p>The size of the file.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC9openInput_6format7optionsySSSg_AA13AVInputFormatVSgSDyS2SGSgtKF":{"name":"openInput(_:format:options:)","abstract":"<p>Open an input stream and read the header.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC14findStreamInfo7optionsySaySDyS2SGGSg_tKF":{"name":"findStreamInfo(options:)","abstract":"<p>Read packets of a media file to get stream information.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC14findBestStream4type06wantedG5Index07relatedgJ0SiSo11AVMediaTypeV_S2itKF":{"name":"findBestStream(type:wantedStreamIndex:relatedStreamIndex:)","abstract":"<p>Find the <q>best</q> stream in the file.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC22guessSampleAspectRatio6stream5frameSo10AVRationalVAA8AVStreamCSg_AA7AVFrameCSgtF":{"name":"guessSampleAspectRatio(stream:frame:)","abstract":"<p>Guess the sample aspect ratio of a frame, based on both the stream and the frame aspect ratio.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC9readFrame4intoyAA8AVPacketC_tKF":{"name":"readFrame(into:)","abstract":"<p>Return the next frame of a stream.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC9seekFrame2to11streamIndex5flagsys5Int64V_SiAC8SeekFlagVtKF":{"name":"seekFrame(to:streamIndex:flags:)","abstract":"<p>Seek to the keyframe at timestamp.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC5flushyyF":{"name":"flush()","abstract":"<p>Discard all internally buffered data. This can be useful when dealing with","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC4playyyKF":{"name":"play()","abstract":"<p>Start playing a network-based stream (e.g. RTSP stream) at the current position.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC5pauseyyKF":{"name":"pause()","abstract":"<p>Pause a network-based stream (e.g. RTSP stream).</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext/SeekFlag.html":{"name":"SeekFlag","abstract":"<p>Undocumented</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC6format0E4Name8filenameAcA14AVOutputFormatVSg_SSSgAJtKcfc":{"name":"init(format:formatName:filename:)","abstract":"<p>Allocate an <code>AVFormatContext</code> for an output format.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC12outputFormatAA08AVOutputF0VSgvp":{"name":"outputFormat","abstract":"<p>The output container format.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC10openOutput3url5flagsySS_AA11AVIOContextC4FlagVtKF":{"name":"openOutput(url:flags:)","abstract":"<p>Create and initialize a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVIOContext.html\">AVIOContext</a></code> for accessing the resource indicated by url.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC9addStream5codecAA8AVStreamCSgAA7AVCodecVSg_tF":{"name":"addStream(codec:)","abstract":"<p>Add a new stream to a media file.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC11writeHeader7optionsySDyS2SGSg_tKF":{"name":"writeHeader(options:)","abstract":"<p>Allocate the stream private data and write the stream header to an output media file.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC10writeFrameyyAA8AVPacketCSgKF":{"name":"writeFrame(_:)","abstract":"<p>Write a packet to an output media file.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC21interleavedWriteFrameyyAA8AVPacketCSgKF":{"name":"interleavedWriteFrame(_:)","abstract":"<p>Write a packet to an output media file ensuring correct interleaving.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC12writeTraileryyKF":{"name":"writeTrailer()","abstract":"<p>Write the stream trailer to an output media file and free the file private data.</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC5classAA7AVClassVvpZ":{"name":"class","abstract":"<p>Undocumented</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC28withUnsafeClassObjectPointeryxxSvKXEKlF":{"name":"withUnsafeClassObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVFormatContext"},"Classes/AVFormatContext.html#/s:11SwiftFFmpeg15AVFormatContextC23withUnsafeObjectPointeryxxSvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVFormatContext"},"Classes/AVCodecParserContext.html#/s:11SwiftFFmpeg20AVCodecParserContextC05codecE0ACSgAA0cE0C_tcfc":{"name":"init(codecContext:)","abstract":"<p>Undocumented</p>","parent_name":"AVCodecParserContext"},"Classes/AVCodecParserContext.html#/s:11SwiftFFmpeg20AVCodecParserContextC5parse4data4size3pts3dts3posSpys5UInt8VGSg_S2itSPyAKG_Sis5Int64VA2PtKF":{"name":"parse(data:size:pts:dts:pos:)","abstract":"<p>Parse a packet.</p>","parent_name":"AVCodecParserContext"},"Classes/AVCodecContext/Flag2.html#/s:11SwiftFFmpeg14AVCodecContextC5Flag2V4fastAEvpZ":{"name":"fast","abstract":"<p>Allow non spec compliant speedup tricks.</p>","parent_name":"Flag2"},"Classes/AVCodecContext/Flag2.html#/s:11SwiftFFmpeg14AVCodecContextC5Flag2V8noOutputAEvpZ":{"name":"noOutput","abstract":"<p>Skip bitstream encoding.</p>","parent_name":"Flag2"},"Classes/AVCodecContext/Flag2.html#/s:11SwiftFFmpeg14AVCodecContextC5Flag2V11localHeaderAEvpZ":{"name":"localHeader","abstract":"<p>Place global headers at every keyframe instead of in extradata.</p>","parent_name":"Flag2"},"Classes/AVCodecContext/Flag2.html#/s:11SwiftFFmpeg14AVCodecContextC5Flag2V6chunksAEvpZ":{"name":"chunks","abstract":"<p>Input bitstream might be truncated at a packet boundaries instead of only at frame boundaries.</p>","parent_name":"Flag2"},"Classes/AVCodecContext/Flag2.html#/s:11SwiftFFmpeg14AVCodecContextC5Flag2V10ignoreCropAEvpZ":{"name":"ignoreCrop","abstract":"<p>Discard cropping information from SPS.</p>","parent_name":"Flag2"},"Classes/AVCodecContext/Flag2.html#/s:11SwiftFFmpeg14AVCodecContextC5Flag2V7showAllAEvpZ":{"name":"showAll","abstract":"<p>Show all frames before the first keyframe.</p>","parent_name":"Flag2"},"Classes/AVCodecContext/Flag2.html#/s:11SwiftFFmpeg14AVCodecContextC5Flag2V9exportMVSAEvpZ":{"name":"exportMVS","abstract":"<p>Export motion vectors through frame side data.</p>","parent_name":"Flag2"},"Classes/AVCodecContext/Flag2.html#/s:11SwiftFFmpeg14AVCodecContextC5Flag2V10skipManualAEvpZ":{"name":"skipManual","abstract":"<p>Do not skip samples and export skip information as frame side data.</p>","parent_name":"Flag2"},"Classes/AVCodecContext/Flag2.html#/s:11SwiftFFmpeg14AVCodecContextC5Flag2V11roFlushNoopAEvpZ":{"name":"roFlushNoop","abstract":"<p>Do not reset ASS ReadOrder field on flush (subtitles decoding).</p>","parent_name":"Flag2"},"Classes/AVCodecContext/Flag2.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Flag2"},"Classes/AVCodecContext/Flag2.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Flag2"},"Classes/AVCodecContext/Flag2.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Flag2"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV9unalignedAEvpZ":{"name":"unaligned","abstract":"<p>Allow decoders to produce frames with data planes that are not aligned","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV6qscaleAEvpZ":{"name":"qscale","abstract":"<p>Use fixed qscale.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV4p4mvAEvpZ":{"name":"p4mv","abstract":"<p>4 MV per MB allowed / advanced prediction for H.263.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV15outputCorruptedAEvpZ":{"name":"outputCorrupted","abstract":"<p>Output even those frames that might be corrupted.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV4qpelAEvpZ":{"name":"qpel","abstract":"<p>Use qpel MC.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV5pass1AEvpZ":{"name":"pass1","abstract":"<p>Use internal 2pass ratecontrol in first pass mode.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV5pass2AEvpZ":{"name":"pass2","abstract":"<p>Use internal 2pass ratecontrol in second pass mode.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV10loopFilterAEvpZ":{"name":"loopFilter","abstract":"<p>loop filter.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV4grayAEvpZ":{"name":"gray","abstract":"<p>Only decode/encode grayscale.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV4psnrAEvpZ":{"name":"psnr","abstract":"<p>error[?] variables will be set during encoding.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV9truncatedAEvpZ":{"name":"truncated","abstract":"<p>Input bitstream might be truncated at a random location instead of only at frame boundaries.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV13interlacedDCTAEvpZ":{"name":"interlacedDCT","abstract":"<p>Use interlaced DCT.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV8lowDelayAEvpZ":{"name":"lowDelay","abstract":"<p>Force low delay.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV12globalHeaderAEvpZ":{"name":"globalHeader","abstract":"<p>Place global headers in extradata instead of every keyframe.</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV8bitexactAEvpZ":{"name":"bitexact","abstract":"<p>Use only bitexact stuff (except (I)DCT).</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV6acPredAEvpZ":{"name":"acPred","abstract":"<p>H.263 advanced intra coding / MPEG-4 AC prediction</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV12interlacedMEAEvpZ":{"name":"interlacedME","abstract":"<p>interlaced motion estimation</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:11SwiftFFmpeg14AVCodecContextC4FlagV9closedGOPAEvpZ":{"name":"closedGOP","abstract":"<p>Undocumented</p>","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Flag"},"Classes/AVCodecContext/Flag.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Flag"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC5codecAcA0C0VSg_tcfc":{"name":"init(codec:)","abstract":"<p>Creates an <code>AVCodecContext</code> and set its fields to default values.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC9mediaTypeSo07AVMediaF0Vvp":{"name":"mediaType","abstract":"<p>The codec&rsquo;s media type.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC5codecAA0C0VSgvp":{"name":"codec","abstract":"<p>Undocumented</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC7codecIdSo0C2IDVvp":{"name":"codecId","abstract":"<p>The codec&rsquo;s id.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC8codecTags6UInt32Vvp":{"name":"codecTag","abstract":"<p>fourcc (LSB first, so <q>ABCD</q> -&gt; (&lsquo;D&rsquo;&lt;&lt;24) + (&lsquo;C&rsquo;&lt;&lt;16) + (&lsquo;B&rsquo;&lt;&lt;8) + &lsquo;A&rsquo;).</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC6opaqueSvSgvp":{"name":"opaque","abstract":"<p>Private data of the user, can be used to carry app specific stuff.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC7bitRates5Int64Vvp":{"name":"bitRate","abstract":"<p>The average bitrate.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC16bitRateToleranceSivp":{"name":"bitRateTolerance","abstract":"<p>Number of bits the bitstream is allowed to diverge from the reference.","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC5flagsAC4FlagVvp":{"name":"flags","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVCodecContext/Flag.html\">AVCodecContext.Flag</a></code></p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC6flags2AC5Flag2Vvp":{"name":"flags2","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVCodecContext/Flag2.html\">AVCodecContext.Flag2</a></code></p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC9extraDataSpys5UInt8VGSgvp":{"name":"extraData","abstract":"<p>Some codecs need / can use extradata like Huffman tables.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC13extraDataSizeSivp":{"name":"extraDataSize","abstract":"<p>The size of the extra data content in bytes.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC8timebaseSo10AVRationalVvp":{"name":"timebase","abstract":"<p>This is the fundamental unit of time (in seconds) in terms of which frame timestamps","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC11frameNumberSivp":{"name":"frameNumber","abstract":"<p>Frame counter.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC08hwFramesD0AA010AVHWFramesD0CSgvp":{"name":"hwFramesContext","abstract":"<p>A reference to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVHWFramesContext.html\">AVHWFramesContext</a></code> describing the input (for encoding)","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC08hwDeviceD0AA010AVHWDeviceD0CSgvp":{"name":"hwDeviceContext","abstract":"<p>A reference to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVHWDeviceContext.html\">AVHWDeviceContext</a></code> describing the device which will","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC6isOpenSbvp":{"name":"isOpen","abstract":"<p>A Boolean value indicating whether the codec is open.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC13setParametersyyAA0cF0CF":{"name":"setParameters(_:)","abstract":"<p>Fill the codec context based on the values from the supplied codec parameters.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC9openCodec_7optionsyAA0C0VSg_SDyS2SGSgtKF":{"name":"openCodec(_:options:)","abstract":"<p>Initialize the <code>AVCodecContext</code>.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC10sendPacketyyAA8AVPacketCSgKF":{"name":"sendPacket(_:)","abstract":"<p>Supply raw packet data as input to a decoder.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC12receiveFrameyyAA7AVFrameCKF":{"name":"receiveFrame(_:)","abstract":"<p>Return decoded output data from a decoder.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC9sendFrameyyAA7AVFrameCSgKF":{"name":"sendFrame(_:)","abstract":"<p>Supply a raw video or audio frame to the encoder.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC13receivePacketyyAA8AVPacketCKF":{"name":"receivePacket(_:)","abstract":"<p>Read encoded data from the encoder.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC5flushyyF":{"name":"flush()","abstract":"<p>Reset the internal decoder state / flush internal buffers. Should be called","parent_name":"AVCodecContext"},"Classes/AVCodecContext/Flag.html":{"name":"Flag","abstract":"<p>Encoding support</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext/Flag2.html":{"name":"Flag2","abstract":"<p>Encoding support</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC5widthSivp":{"name":"width","abstract":"<p>The width of the picture.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC6heightSivp":{"name":"height","abstract":"<p>The height of the picture.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC10codedWidthSivp":{"name":"codedWidth","abstract":"<p>Bitstream width, may be different from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC5widthSivp\">width</a></code> e.g. when the decoded frame is cropped before","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC11codedHeightSivp":{"name":"codedHeight","abstract":"<p>Bitstream height, may be different from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC6heightSivp\">height</a></code> e.g. when the decoded frame is cropped before","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC7gopSizeSivp":{"name":"gopSize","abstract":"<p>The number of pictures in a group of pictures, or 0 for intra_only.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC11pixelFormatSo07AVPixelF0Vvp":{"name":"pixelFormat","abstract":"<p>The pixel format of the picture.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC9getFormatSo07AVPixelF0VAC_SayAFGtcSgvp":{"name":"getFormat","abstract":"<p>The callback used to negotiate the pixel format.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC10maxBFramesSivp":{"name":"maxBFrames","abstract":"<p>Maximum number of B-frames between non-B-frames.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC10mbDecisionSivp":{"name":"mbDecision","abstract":"<p>Macroblock decision mode.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC17sampleAspectRatioSo10AVRationalVvp":{"name":"sampleAspectRatio","abstract":"<p>Sample aspect ratio (0/0 if unknown).</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC6lowresSivp":{"name":"lowres","abstract":"<p>low resolution decoding, 1-&gt;&frac12; size, 2-&gt;&frac14; size</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC9framerateSo10AVRationalVvp":{"name":"framerate","abstract":"<p>The framerate of the video.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC10sampleRateSivp":{"name":"sampleRate","abstract":"<p>Samples per second.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC12channelCountSivp":{"name":"channelCount","abstract":"<p>Number of audio channels.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC12sampleFormatSo08AVSampleF0Vvp":{"name":"sampleFormat","abstract":"<p>Audio sample format.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC9frameSizeSivp":{"name":"frameSize","abstract":"<p>Number of samples per channel in an audio frame.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC13channelLayoutAA09AVChannelF0Vvp":{"name":"channelLayout","abstract":"<p>Audio channel layout.</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC5classAA7AVClassVvpZ":{"name":"class","abstract":"<p>Undocumented</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC28withUnsafeClassObjectPointeryxxSvKXEKlF":{"name":"withUnsafeClassObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVCodecContext"},"Classes/AVCodecContext.html#/s:11SwiftFFmpeg14AVCodecContextC23withUnsafeObjectPointeryxxSvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVCodecContext"},"Classes/AVBuffer.html#/s:11SwiftFFmpeg8AVBufferC4dataSpys5UInt8VGvp":{"name":"data","abstract":"<p>The data buffer.</p>","parent_name":"AVBuffer"},"Classes/AVBuffer.html#/s:11SwiftFFmpeg8AVBufferC4sizeSivp":{"name":"size","abstract":"<p>The size of data in bytes.</p>","parent_name":"AVBuffer"},"Classes/AVBuffer.html#/s:11SwiftFFmpeg8AVBufferC8refCountSivp":{"name":"refCount","abstract":"<p>The reference count held by the buffer.</p>","parent_name":"AVBuffer"},"Classes/AVBuffer.html#/s:11SwiftFFmpeg8AVBufferC10isWritableSbvp":{"name":"isWritable","abstract":"<p>A Boolean value indicating whether this buffer is writable.","parent_name":"AVBuffer"},"Classes/AVBuffer.html#/s:11SwiftFFmpeg8AVBufferC7realloc4sizeySi_tF":{"name":"realloc(size:)","abstract":"<p>Reallocate a given buffer.</p>","parent_name":"AVBuffer"},"Classes/AVBuffer.html#/s:11SwiftFFmpeg8AVBufferC12makeWritableyyF":{"name":"makeWritable()","abstract":"<p>Create a writable reference from a given buffer reference, avoiding data copy if possible.</p>","parent_name":"AVBuffer"},"Classes/AVBuffer.html#/s:11SwiftFFmpeg8AVBufferC3refACSgyF":{"name":"ref()","abstract":"<p>Create a new reference to an <code>AVBuffer</code>.</p>","parent_name":"AVBuffer"},"Classes/AVBuffer.html#/s:11SwiftFFmpeg8AVBufferC5unrefyyF":{"name":"unref()","abstract":"<p>Free a given reference and automatically free the buffer if there are no more references to it.</p>","parent_name":"AVBuffer"},"Classes/AVBSFList.html#/s:11SwiftFFmpeg9AVBSFListCACycfc":{"name":"init()","abstract":"<p>Create an empty list of bitstream filters.</p>","parent_name":"AVBSFList"},"Classes/AVBSFList.html#/s:11SwiftFFmpeg9AVBSFListC6appendyyAA12AVBSFContextCF":{"name":"append(_:)","abstract":"<p>Append bitstream filter to the list of bitstream filters.</p>","parent_name":"AVBSFList"},"Classes/AVBSFList.html#/s:11SwiftFFmpeg9AVBSFListC6append_7optionsySS_SDyS2SGSgtF":{"name":"append(_:options:)","abstract":"<p>Create a new bitstream filter context with the given name and options, and append it to the list of bitstream filters.</p>","parent_name":"AVBSFList"},"Classes/AVBSFList.html#/s:11SwiftFFmpeg9AVBSFListC8finalizeAA12AVBSFContextCyF":{"name":"finalize()","abstract":"<p>Finalize list of bitstream filters.</p>","parent_name":"AVBSFList"},"Classes/AVBSFContext.html#/s:11SwiftFFmpeg12AVBSFContextCACycfc":{"name":"init()","abstract":"<p>Get null/pass-through bitstream filter.</p>","parent_name":"AVBSFContext"},"Classes/AVBSFContext.html#/s:11SwiftFFmpeg12AVBSFContextC6filterAcA17AVBitStreamFilterV_tcfc":{"name":"init(filter:)","abstract":"<p>Allocate a context for a given bitstream filter.","parent_name":"AVBSFContext"},"Classes/AVBSFContext.html#/s:11SwiftFFmpeg12AVBSFContextC3strACSS_tcfc":{"name":"init(str:)","abstract":"<p>Parse string describing list of bitstream filters and create single","parent_name":"AVBSFContext"},"Classes/AVBSFContext.html#/s:11SwiftFFmpeg12AVBSFContextC10initializeyyKF":{"name":"initialize()","abstract":"<p>Prepare the filter for use, after all the parameters and options have been set.</p>","parent_name":"AVBSFContext"},"Classes/AVBSFContext.html#/s:11SwiftFFmpeg12AVBSFContextC10sendPacketyyAA8AVPacketCSgKF":{"name":"sendPacket(_:)","abstract":"<p>Submit a packet for filtering.</p>","parent_name":"AVBSFContext"},"Classes/AVBSFContext.html#/s:11SwiftFFmpeg12AVBSFContextC13receivePacketyyAA8AVPacketCKF":{"name":"receivePacket(_:)","abstract":"<p>Retrieve a filtered packet.</p>","parent_name":"AVBSFContext"},"Classes/AVBSFContext.html#/s:11SwiftFFmpeg12AVBSFContextC5flushyyF":{"name":"flush()","abstract":"<p>Reset the internal bitstream filter state / flush internal buffers.</p>","parent_name":"AVBSFContext"},"Classes/AVBSFContext.html#/s:11SwiftFFmpeg12AVBSFContextC5classAA7AVClassVvpZ":{"name":"class","abstract":"<p>Undocumented</p>","parent_name":"AVBSFContext"},"Classes/AVBSFContext.html#/s:11SwiftFFmpeg12AVBSFContextC28withUnsafeClassObjectPointeryxxSvKXEKlF":{"name":"withUnsafeClassObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVBSFContext"},"Classes/AVBSFContext.html#/s:11SwiftFFmpeg12AVBSFContextC23withUnsafeObjectPointeryxxSvKXEKlF":{"name":"withUnsafeObjectPointer(_:)","abstract":"<p>Undocumented</p>","parent_name":"AVBSFContext"},"Classes/AVBSFContext.html":{"name":"AVBSFContext","abstract":"<p>The bitstream filter state.</p>"},"Classes/AVBSFList.html":{"name":"AVBSFList","abstract":"<p>Structure for chain/list of bitstream filters.</p>"},"Classes/AVBuffer.html":{"name":"AVBuffer","abstract":"<p>Undocumented</p>"},"Classes/AVCodecContext.html":{"name":"AVCodecContext","abstract":"<p>Undocumented</p>"},"Classes/AVCodecParserContext.html":{"name":"AVCodecParserContext","abstract":"<p>Undocumented</p>"},"Classes/AVFormatContext.html":{"name":"AVFormatContext","abstract":"<p>Format I/O context.</p>"},"Classes/AVDeviceCapabilitiesQuery.html":{"name":"AVDeviceCapabilitiesQuery","abstract":"<p>Structure describes device capabilities.</p>"},"Classes/AVDeviceInfoList.html":{"name":"AVDeviceInfoList","abstract":"<p>List of devices.</p>"},"Classes/AVFilterContext.html":{"name":"AVFilterContext","abstract":"<p>An instance of a filter.</p>"},"Classes/AVFilterGraph.html":{"name":"AVFilterGraph","abstract":"<p>Undocumented</p>"},"Classes/AVFilterInOut.html":{"name":"AVFilterInOut","abstract":"<p>A linked-list of the inputs/outputs of the filter chain.</p>"},"Classes/AVFrame.html":{"name":"AVFrame","abstract":"<p>This structure describes decoded (raw) audio or video data.</p>"},"Classes/AVHWDeviceContext.html":{"name":"AVHWDeviceContext","abstract":"<p>Undocumented</p>"},"Classes/AVHWFramesContext.html":{"name":"AVHWFramesContext","abstract":"<p>This struct describes a set or pool of <q>hardware</q> frames (i.e. those with"},"Classes/AVIODirEntry.html":{"name":"AVIODirEntry","abstract":"<p>Describes single entry of the directory.</p>"},"Classes/AVIODirContext.html":{"name":"AVIODirContext","abstract":"<p>Undocumented</p>"},"Classes/AVIOContext.html":{"name":"AVIOContext","abstract":"<p>Bytestream IO Context.</p>"},"Classes/AVImage.html":{"name":"AVImage","abstract":"<p>Undocumented</p>"},"Classes/AVPacket.html":{"name":"AVPacket","abstract":"<p>This structure stores compressed data. It is typically exported by demuxers"},"Classes/AVSamples.html":{"name":"AVSamples","abstract":"<p>Undocumented</p>"},"Classes/AVCodecParameters.html":{"name":"AVCodecParameters","abstract":"<p>This class describes the properties of an encoded stream.</p>"},"Classes/AVStream.html":{"name":"AVStream","abstract":"<p>Stream structure.</p>"},"Classes/AVHash.html":{"name":"AVHash","abstract":"<p>Undocumented</p>"},"Classes/SwrContext.html":{"name":"SwrContext","abstract":"<p>Undocumented</p>"},"Classes/SwsContext.html":{"name":"SwsContext","abstract":"<p>Undocumented</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}